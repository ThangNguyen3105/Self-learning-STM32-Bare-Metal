
12_Timers_F1_eg.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001120  08000130  08000130  00001130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000004c  08001250  08001250  00002250  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800129c  0800129c  0000305c  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  0800129c  0800129c  0000305c  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  0800129c  0800129c  0000305c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800129c  0800129c  0000229c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080012a0  080012a0  000022a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000005c  20000000  080012a4  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  2000005c  08001300  0000305c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001c8  08001300  000031c8  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  0000305c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000d56  00000000  00000000  00003085  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000420  00000000  00000000  00003ddb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000130  00000000  00000000  00004200  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000000cc  00000000  00000000  00004330  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00011cb3  00000000  00000000  000043fc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001ae9  00000000  00000000  000160af  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00059a96  00000000  00000000  00017b98  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0007162e  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000b38  00000000  00000000  00071674  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000073  00000000  00000000  000721ac  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	@ (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	@ (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	@ (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	2000005c 	.word	0x2000005c
 800014c:	00000000 	.word	0x00000000
 8000150:	08001238 	.word	0x08001238

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	@ (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	@ (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	@ (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000060 	.word	0x20000060
 800016c:	08001238 	.word	0x08001238

08000170 <main>:

#define GPIOAEN 	(1U<<2)
#define PIN5 		(1U<<5)
#define LED_PIN		PIN5

int main() {
 8000170:	b580      	push	{r7, lr}
 8000172:	af00      	add	r7, sp, #0
	/*1.Enable clock access to GPIOA*/
	RCC->APB2ENR |= GPIOAEN;
 8000174:	4b1c      	ldr	r3, [pc, #112]	@ (80001e8 <main+0x78>)
 8000176:	699b      	ldr	r3, [r3, #24]
 8000178:	4a1b      	ldr	r2, [pc, #108]	@ (80001e8 <main+0x78>)
 800017a:	f043 0304 	orr.w	r3, r3, #4
 800017e:	6193      	str	r3, [r2, #24]
	/*2.Set PA5 as output pin*/
	GPIOA->CRL &= ~(1U << 23);
 8000180:	4b1a      	ldr	r3, [pc, #104]	@ (80001ec <main+0x7c>)
 8000182:	681b      	ldr	r3, [r3, #0]
 8000184:	4a19      	ldr	r2, [pc, #100]	@ (80001ec <main+0x7c>)
 8000186:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
 800018a:	6013      	str	r3, [r2, #0]
	GPIOA->CRL &= ~(1U << 22);
 800018c:	4b17      	ldr	r3, [pc, #92]	@ (80001ec <main+0x7c>)
 800018e:	681b      	ldr	r3, [r3, #0]
 8000190:	4a16      	ldr	r2, [pc, #88]	@ (80001ec <main+0x7c>)
 8000192:	f423 0380 	bic.w	r3, r3, #4194304	@ 0x400000
 8000196:	6013      	str	r3, [r2, #0]
	GPIOA->CRL &= ~(1U << 21);
 8000198:	4b14      	ldr	r3, [pc, #80]	@ (80001ec <main+0x7c>)
 800019a:	681b      	ldr	r3, [r3, #0]
 800019c:	4a13      	ldr	r2, [pc, #76]	@ (80001ec <main+0x7c>)
 800019e:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 80001a2:	6013      	str	r3, [r2, #0]
	GPIOA->CRL |= (1U << 20);
 80001a4:	4b11      	ldr	r3, [pc, #68]	@ (80001ec <main+0x7c>)
 80001a6:	681b      	ldr	r3, [r3, #0]
 80001a8:	4a10      	ldr	r2, [pc, #64]	@ (80001ec <main+0x7c>)
 80001aa:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80001ae:	6013      	str	r3, [r2, #0]

	tim2_1hz_init();
 80001b0:	f000 f8c0 	bl	8000334 <tim2_1hz_init>
	while (1) {
		/*Wait for UIF = 0 */
		while (!(TIM2->SR & SR_UIF)) {
 80001b4:	bf00      	nop
 80001b6:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80001ba:	691b      	ldr	r3, [r3, #16]
 80001bc:	f003 0301 	and.w	r3, r3, #1
 80001c0:	2b00      	cmp	r3, #0
 80001c2:	d0f8      	beq.n	80001b6 <main+0x46>
		}

		/*Clear UIF*/
		TIM2->SR &= ~SR_UIF;
 80001c4:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80001c8:	691b      	ldr	r3, [r3, #16]
 80001ca:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 80001ce:	f023 0301 	bic.w	r3, r3, #1
 80001d2:	6113      	str	r3, [r2, #16]

		printf("A second passed !! \n\r");
 80001d4:	4806      	ldr	r0, [pc, #24]	@ (80001f0 <main+0x80>)
 80001d6:	f000 f9b9 	bl	800054c <iprintf>
		GPIOA->ODR ^= LED_PIN;
 80001da:	4b04      	ldr	r3, [pc, #16]	@ (80001ec <main+0x7c>)
 80001dc:	68db      	ldr	r3, [r3, #12]
 80001de:	4a03      	ldr	r2, [pc, #12]	@ (80001ec <main+0x7c>)
 80001e0:	f083 0320 	eor.w	r3, r3, #32
 80001e4:	60d3      	str	r3, [r2, #12]
		while (!(TIM2->SR & SR_UIF)) {
 80001e6:	e7e5      	b.n	80001b4 <main+0x44>
 80001e8:	40021000 	.word	0x40021000
 80001ec:	40010800 	.word	0x40010800
 80001f0:	08001250 	.word	0x08001250

080001f4 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80001f4:	b580      	push	{r7, lr}
 80001f6:	b086      	sub	sp, #24
 80001f8:	af00      	add	r7, sp, #0
 80001fa:	60f8      	str	r0, [r7, #12]
 80001fc:	60b9      	str	r1, [r7, #8]
 80001fe:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000200:	2300      	movs	r3, #0
 8000202:	617b      	str	r3, [r7, #20]
 8000204:	e00a      	b.n	800021c <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8000206:	f3af 8000 	nop.w
 800020a:	4601      	mov	r1, r0
 800020c:	68bb      	ldr	r3, [r7, #8]
 800020e:	1c5a      	adds	r2, r3, #1
 8000210:	60ba      	str	r2, [r7, #8]
 8000212:	b2ca      	uxtb	r2, r1
 8000214:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000216:	697b      	ldr	r3, [r7, #20]
 8000218:	3301      	adds	r3, #1
 800021a:	617b      	str	r3, [r7, #20]
 800021c:	697a      	ldr	r2, [r7, #20]
 800021e:	687b      	ldr	r3, [r7, #4]
 8000220:	429a      	cmp	r2, r3
 8000222:	dbf0      	blt.n	8000206 <_read+0x12>
  }

  return len;
 8000224:	687b      	ldr	r3, [r7, #4]
}
 8000226:	4618      	mov	r0, r3
 8000228:	3718      	adds	r7, #24
 800022a:	46bd      	mov	sp, r7
 800022c:	bd80      	pop	{r7, pc}

0800022e <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800022e:	b580      	push	{r7, lr}
 8000230:	b086      	sub	sp, #24
 8000232:	af00      	add	r7, sp, #0
 8000234:	60f8      	str	r0, [r7, #12]
 8000236:	60b9      	str	r1, [r7, #8]
 8000238:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800023a:	2300      	movs	r3, #0
 800023c:	617b      	str	r3, [r7, #20]
 800023e:	e009      	b.n	8000254 <_write+0x26>
  {
    __io_putchar(*ptr++);
 8000240:	68bb      	ldr	r3, [r7, #8]
 8000242:	1c5a      	adds	r2, r3, #1
 8000244:	60ba      	str	r2, [r7, #8]
 8000246:	781b      	ldrb	r3, [r3, #0]
 8000248:	4618      	mov	r0, r3
 800024a:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800024e:	697b      	ldr	r3, [r7, #20]
 8000250:	3301      	adds	r3, #1
 8000252:	617b      	str	r3, [r7, #20]
 8000254:	697a      	ldr	r2, [r7, #20]
 8000256:	687b      	ldr	r3, [r7, #4]
 8000258:	429a      	cmp	r2, r3
 800025a:	dbf1      	blt.n	8000240 <_write+0x12>
  }
  return len;
 800025c:	687b      	ldr	r3, [r7, #4]
}
 800025e:	4618      	mov	r0, r3
 8000260:	3718      	adds	r7, #24
 8000262:	46bd      	mov	sp, r7
 8000264:	bd80      	pop	{r7, pc}

08000266 <_close>:

int _close(int file)
{
 8000266:	b480      	push	{r7}
 8000268:	b083      	sub	sp, #12
 800026a:	af00      	add	r7, sp, #0
 800026c:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800026e:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000272:	4618      	mov	r0, r3
 8000274:	370c      	adds	r7, #12
 8000276:	46bd      	mov	sp, r7
 8000278:	bc80      	pop	{r7}
 800027a:	4770      	bx	lr

0800027c <_fstat>:


int _fstat(int file, struct stat *st)
{
 800027c:	b480      	push	{r7}
 800027e:	b083      	sub	sp, #12
 8000280:	af00      	add	r7, sp, #0
 8000282:	6078      	str	r0, [r7, #4]
 8000284:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000286:	683b      	ldr	r3, [r7, #0]
 8000288:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 800028c:	605a      	str	r2, [r3, #4]
  return 0;
 800028e:	2300      	movs	r3, #0
}
 8000290:	4618      	mov	r0, r3
 8000292:	370c      	adds	r7, #12
 8000294:	46bd      	mov	sp, r7
 8000296:	bc80      	pop	{r7}
 8000298:	4770      	bx	lr

0800029a <_isatty>:

int _isatty(int file)
{
 800029a:	b480      	push	{r7}
 800029c:	b083      	sub	sp, #12
 800029e:	af00      	add	r7, sp, #0
 80002a0:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80002a2:	2301      	movs	r3, #1
}
 80002a4:	4618      	mov	r0, r3
 80002a6:	370c      	adds	r7, #12
 80002a8:	46bd      	mov	sp, r7
 80002aa:	bc80      	pop	{r7}
 80002ac:	4770      	bx	lr

080002ae <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80002ae:	b480      	push	{r7}
 80002b0:	b085      	sub	sp, #20
 80002b2:	af00      	add	r7, sp, #0
 80002b4:	60f8      	str	r0, [r7, #12]
 80002b6:	60b9      	str	r1, [r7, #8]
 80002b8:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80002ba:	2300      	movs	r3, #0
}
 80002bc:	4618      	mov	r0, r3
 80002be:	3714      	adds	r7, #20
 80002c0:	46bd      	mov	sp, r7
 80002c2:	bc80      	pop	{r7}
 80002c4:	4770      	bx	lr
	...

080002c8 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80002c8:	b580      	push	{r7, lr}
 80002ca:	b086      	sub	sp, #24
 80002cc:	af00      	add	r7, sp, #0
 80002ce:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80002d0:	4a14      	ldr	r2, [pc, #80]	@ (8000324 <_sbrk+0x5c>)
 80002d2:	4b15      	ldr	r3, [pc, #84]	@ (8000328 <_sbrk+0x60>)
 80002d4:	1ad3      	subs	r3, r2, r3
 80002d6:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80002d8:	697b      	ldr	r3, [r7, #20]
 80002da:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80002dc:	4b13      	ldr	r3, [pc, #76]	@ (800032c <_sbrk+0x64>)
 80002de:	681b      	ldr	r3, [r3, #0]
 80002e0:	2b00      	cmp	r3, #0
 80002e2:	d102      	bne.n	80002ea <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80002e4:	4b11      	ldr	r3, [pc, #68]	@ (800032c <_sbrk+0x64>)
 80002e6:	4a12      	ldr	r2, [pc, #72]	@ (8000330 <_sbrk+0x68>)
 80002e8:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80002ea:	4b10      	ldr	r3, [pc, #64]	@ (800032c <_sbrk+0x64>)
 80002ec:	681a      	ldr	r2, [r3, #0]
 80002ee:	687b      	ldr	r3, [r7, #4]
 80002f0:	4413      	add	r3, r2
 80002f2:	693a      	ldr	r2, [r7, #16]
 80002f4:	429a      	cmp	r2, r3
 80002f6:	d207      	bcs.n	8000308 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80002f8:	f000 f9cc 	bl	8000694 <__errno>
 80002fc:	4603      	mov	r3, r0
 80002fe:	220c      	movs	r2, #12
 8000300:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000302:	f04f 33ff 	mov.w	r3, #4294967295
 8000306:	e009      	b.n	800031c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000308:	4b08      	ldr	r3, [pc, #32]	@ (800032c <_sbrk+0x64>)
 800030a:	681b      	ldr	r3, [r3, #0]
 800030c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800030e:	4b07      	ldr	r3, [pc, #28]	@ (800032c <_sbrk+0x64>)
 8000310:	681a      	ldr	r2, [r3, #0]
 8000312:	687b      	ldr	r3, [r7, #4]
 8000314:	4413      	add	r3, r2
 8000316:	4a05      	ldr	r2, [pc, #20]	@ (800032c <_sbrk+0x64>)
 8000318:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800031a:	68fb      	ldr	r3, [r7, #12]
}
 800031c:	4618      	mov	r0, r3
 800031e:	3718      	adds	r7, #24
 8000320:	46bd      	mov	sp, r7
 8000322:	bd80      	pop	{r7, pc}
 8000324:	20005000 	.word	0x20005000
 8000328:	00000400 	.word	0x00000400
 800032c:	20000078 	.word	0x20000078
 8000330:	200001c8 	.word	0x200001c8

08000334 <tim2_1hz_init>:
#include "stm32f103xb.h"

#define TIM2EN		(1U<<0)
#define CR1_CEN 	(1U<<0)

void tim2_1hz_init(void) {
 8000334:	b480      	push	{r7}
 8000336:	af00      	add	r7, sp, #0
	/*Enable clock access to tim2*/
	RCC->APB1ENR |= TIM2EN;
 8000338:	4b0d      	ldr	r3, [pc, #52]	@ (8000370 <tim2_1hz_init+0x3c>)
 800033a:	69db      	ldr	r3, [r3, #28]
 800033c:	4a0c      	ldr	r2, [pc, #48]	@ (8000370 <tim2_1hz_init+0x3c>)
 800033e:	f043 0301 	orr.w	r3, r3, #1
 8000342:	61d3      	str	r3, [r2, #28]

	/*Set prescaler value*/
	TIM2->PSC = 1600 - 1;  //
 8000344:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8000348:	f240 623f 	movw	r2, #1599	@ 0x63f
 800034c:	629a      	str	r2, [r3, #40]	@ 0x28
	/*Set auto-reload value*/
	TIM2->ARR = 24999 - 1;  // 10 000 / 10 000 = 1
 800034e:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8000352:	f246 12a6 	movw	r2, #24998	@ 0x61a6
 8000356:	62da      	str	r2, [r3, #44]	@ 0x2c
	/*Clear counter*/
	TIM2->CNT = 0;
 8000358:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800035c:	2200      	movs	r2, #0
 800035e:	625a      	str	r2, [r3, #36]	@ 0x24

	/*Enable timer*/
	TIM2->CR1 = CR1_CEN;
 8000360:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8000364:	2201      	movs	r2, #1
 8000366:	601a      	str	r2, [r3, #0]
}
 8000368:	bf00      	nop
 800036a:	46bd      	mov	sp, r7
 800036c:	bc80      	pop	{r7}
 800036e:	4770      	bx	lr
 8000370:	40021000 	.word	0x40021000

08000374 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000374:	480d      	ldr	r0, [pc, #52]	@ (80003ac <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000376:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000378:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800037c:	480c      	ldr	r0, [pc, #48]	@ (80003b0 <LoopForever+0x6>)
  ldr r1, =_edata
 800037e:	490d      	ldr	r1, [pc, #52]	@ (80003b4 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000380:	4a0d      	ldr	r2, [pc, #52]	@ (80003b8 <LoopForever+0xe>)
  movs r3, #0
 8000382:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000384:	e002      	b.n	800038c <LoopCopyDataInit>

08000386 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000386:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000388:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800038a:	3304      	adds	r3, #4

0800038c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800038c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800038e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000390:	d3f9      	bcc.n	8000386 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000392:	4a0a      	ldr	r2, [pc, #40]	@ (80003bc <LoopForever+0x12>)
  ldr r4, =_ebss
 8000394:	4c0a      	ldr	r4, [pc, #40]	@ (80003c0 <LoopForever+0x16>)
  movs r3, #0
 8000396:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000398:	e001      	b.n	800039e <LoopFillZerobss>

0800039a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800039a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800039c:	3204      	adds	r2, #4

0800039e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800039e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80003a0:	d3fb      	bcc.n	800039a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80003a2:	f000 f97d 	bl	80006a0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80003a6:	f7ff fee3 	bl	8000170 <main>

080003aa <LoopForever>:

LoopForever:
  b LoopForever
 80003aa:	e7fe      	b.n	80003aa <LoopForever>
  ldr   r0, =_estack
 80003ac:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 80003b0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80003b4:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 80003b8:	080012a4 	.word	0x080012a4
  ldr r2, =_sbss
 80003bc:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 80003c0:	200001c8 	.word	0x200001c8

080003c4 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80003c4:	e7fe      	b.n	80003c4 <ADC1_2_IRQHandler>
	...

080003c8 <std>:
 80003c8:	2300      	movs	r3, #0
 80003ca:	b510      	push	{r4, lr}
 80003cc:	4604      	mov	r4, r0
 80003ce:	e9c0 3300 	strd	r3, r3, [r0]
 80003d2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80003d6:	6083      	str	r3, [r0, #8]
 80003d8:	8181      	strh	r1, [r0, #12]
 80003da:	6643      	str	r3, [r0, #100]	@ 0x64
 80003dc:	81c2      	strh	r2, [r0, #14]
 80003de:	6183      	str	r3, [r0, #24]
 80003e0:	4619      	mov	r1, r3
 80003e2:	2208      	movs	r2, #8
 80003e4:	305c      	adds	r0, #92	@ 0x5c
 80003e6:	f000 f906 	bl	80005f6 <memset>
 80003ea:	4b0d      	ldr	r3, [pc, #52]	@ (8000420 <std+0x58>)
 80003ec:	6224      	str	r4, [r4, #32]
 80003ee:	6263      	str	r3, [r4, #36]	@ 0x24
 80003f0:	4b0c      	ldr	r3, [pc, #48]	@ (8000424 <std+0x5c>)
 80003f2:	62a3      	str	r3, [r4, #40]	@ 0x28
 80003f4:	4b0c      	ldr	r3, [pc, #48]	@ (8000428 <std+0x60>)
 80003f6:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80003f8:	4b0c      	ldr	r3, [pc, #48]	@ (800042c <std+0x64>)
 80003fa:	6323      	str	r3, [r4, #48]	@ 0x30
 80003fc:	4b0c      	ldr	r3, [pc, #48]	@ (8000430 <std+0x68>)
 80003fe:	429c      	cmp	r4, r3
 8000400:	d006      	beq.n	8000410 <std+0x48>
 8000402:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8000406:	4294      	cmp	r4, r2
 8000408:	d002      	beq.n	8000410 <std+0x48>
 800040a:	33d0      	adds	r3, #208	@ 0xd0
 800040c:	429c      	cmp	r4, r3
 800040e:	d105      	bne.n	800041c <std+0x54>
 8000410:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8000414:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000418:	f000 b966 	b.w	80006e8 <__retarget_lock_init_recursive>
 800041c:	bd10      	pop	{r4, pc}
 800041e:	bf00      	nop
 8000420:	08000571 	.word	0x08000571
 8000424:	08000593 	.word	0x08000593
 8000428:	080005cb 	.word	0x080005cb
 800042c:	080005ef 	.word	0x080005ef
 8000430:	2000007c 	.word	0x2000007c

08000434 <stdio_exit_handler>:
 8000434:	4a02      	ldr	r2, [pc, #8]	@ (8000440 <stdio_exit_handler+0xc>)
 8000436:	4903      	ldr	r1, [pc, #12]	@ (8000444 <stdio_exit_handler+0x10>)
 8000438:	4803      	ldr	r0, [pc, #12]	@ (8000448 <stdio_exit_handler+0x14>)
 800043a:	f000 b869 	b.w	8000510 <_fwalk_sglue>
 800043e:	bf00      	nop
 8000440:	20000000 	.word	0x20000000
 8000444:	08000f7d 	.word	0x08000f7d
 8000448:	20000010 	.word	0x20000010

0800044c <cleanup_stdio>:
 800044c:	6841      	ldr	r1, [r0, #4]
 800044e:	4b0c      	ldr	r3, [pc, #48]	@ (8000480 <cleanup_stdio+0x34>)
 8000450:	b510      	push	{r4, lr}
 8000452:	4299      	cmp	r1, r3
 8000454:	4604      	mov	r4, r0
 8000456:	d001      	beq.n	800045c <cleanup_stdio+0x10>
 8000458:	f000 fd90 	bl	8000f7c <_fflush_r>
 800045c:	68a1      	ldr	r1, [r4, #8]
 800045e:	4b09      	ldr	r3, [pc, #36]	@ (8000484 <cleanup_stdio+0x38>)
 8000460:	4299      	cmp	r1, r3
 8000462:	d002      	beq.n	800046a <cleanup_stdio+0x1e>
 8000464:	4620      	mov	r0, r4
 8000466:	f000 fd89 	bl	8000f7c <_fflush_r>
 800046a:	68e1      	ldr	r1, [r4, #12]
 800046c:	4b06      	ldr	r3, [pc, #24]	@ (8000488 <cleanup_stdio+0x3c>)
 800046e:	4299      	cmp	r1, r3
 8000470:	d004      	beq.n	800047c <cleanup_stdio+0x30>
 8000472:	4620      	mov	r0, r4
 8000474:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000478:	f000 bd80 	b.w	8000f7c <_fflush_r>
 800047c:	bd10      	pop	{r4, pc}
 800047e:	bf00      	nop
 8000480:	2000007c 	.word	0x2000007c
 8000484:	200000e4 	.word	0x200000e4
 8000488:	2000014c 	.word	0x2000014c

0800048c <global_stdio_init.part.0>:
 800048c:	b510      	push	{r4, lr}
 800048e:	4b0b      	ldr	r3, [pc, #44]	@ (80004bc <global_stdio_init.part.0+0x30>)
 8000490:	4c0b      	ldr	r4, [pc, #44]	@ (80004c0 <global_stdio_init.part.0+0x34>)
 8000492:	4a0c      	ldr	r2, [pc, #48]	@ (80004c4 <global_stdio_init.part.0+0x38>)
 8000494:	4620      	mov	r0, r4
 8000496:	601a      	str	r2, [r3, #0]
 8000498:	2104      	movs	r1, #4
 800049a:	2200      	movs	r2, #0
 800049c:	f7ff ff94 	bl	80003c8 <std>
 80004a0:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 80004a4:	2201      	movs	r2, #1
 80004a6:	2109      	movs	r1, #9
 80004a8:	f7ff ff8e 	bl	80003c8 <std>
 80004ac:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 80004b0:	2202      	movs	r2, #2
 80004b2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80004b6:	2112      	movs	r1, #18
 80004b8:	f7ff bf86 	b.w	80003c8 <std>
 80004bc:	200001b4 	.word	0x200001b4
 80004c0:	2000007c 	.word	0x2000007c
 80004c4:	08000435 	.word	0x08000435

080004c8 <__sfp_lock_acquire>:
 80004c8:	4801      	ldr	r0, [pc, #4]	@ (80004d0 <__sfp_lock_acquire+0x8>)
 80004ca:	f000 b90e 	b.w	80006ea <__retarget_lock_acquire_recursive>
 80004ce:	bf00      	nop
 80004d0:	200001bd 	.word	0x200001bd

080004d4 <__sfp_lock_release>:
 80004d4:	4801      	ldr	r0, [pc, #4]	@ (80004dc <__sfp_lock_release+0x8>)
 80004d6:	f000 b909 	b.w	80006ec <__retarget_lock_release_recursive>
 80004da:	bf00      	nop
 80004dc:	200001bd 	.word	0x200001bd

080004e0 <__sinit>:
 80004e0:	b510      	push	{r4, lr}
 80004e2:	4604      	mov	r4, r0
 80004e4:	f7ff fff0 	bl	80004c8 <__sfp_lock_acquire>
 80004e8:	6a23      	ldr	r3, [r4, #32]
 80004ea:	b11b      	cbz	r3, 80004f4 <__sinit+0x14>
 80004ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80004f0:	f7ff bff0 	b.w	80004d4 <__sfp_lock_release>
 80004f4:	4b04      	ldr	r3, [pc, #16]	@ (8000508 <__sinit+0x28>)
 80004f6:	6223      	str	r3, [r4, #32]
 80004f8:	4b04      	ldr	r3, [pc, #16]	@ (800050c <__sinit+0x2c>)
 80004fa:	681b      	ldr	r3, [r3, #0]
 80004fc:	2b00      	cmp	r3, #0
 80004fe:	d1f5      	bne.n	80004ec <__sinit+0xc>
 8000500:	f7ff ffc4 	bl	800048c <global_stdio_init.part.0>
 8000504:	e7f2      	b.n	80004ec <__sinit+0xc>
 8000506:	bf00      	nop
 8000508:	0800044d 	.word	0x0800044d
 800050c:	200001b4 	.word	0x200001b4

08000510 <_fwalk_sglue>:
 8000510:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000514:	4607      	mov	r7, r0
 8000516:	4688      	mov	r8, r1
 8000518:	4614      	mov	r4, r2
 800051a:	2600      	movs	r6, #0
 800051c:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000520:	f1b9 0901 	subs.w	r9, r9, #1
 8000524:	d505      	bpl.n	8000532 <_fwalk_sglue+0x22>
 8000526:	6824      	ldr	r4, [r4, #0]
 8000528:	2c00      	cmp	r4, #0
 800052a:	d1f7      	bne.n	800051c <_fwalk_sglue+0xc>
 800052c:	4630      	mov	r0, r6
 800052e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000532:	89ab      	ldrh	r3, [r5, #12]
 8000534:	2b01      	cmp	r3, #1
 8000536:	d907      	bls.n	8000548 <_fwalk_sglue+0x38>
 8000538:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800053c:	3301      	adds	r3, #1
 800053e:	d003      	beq.n	8000548 <_fwalk_sglue+0x38>
 8000540:	4629      	mov	r1, r5
 8000542:	4638      	mov	r0, r7
 8000544:	47c0      	blx	r8
 8000546:	4306      	orrs	r6, r0
 8000548:	3568      	adds	r5, #104	@ 0x68
 800054a:	e7e9      	b.n	8000520 <_fwalk_sglue+0x10>

0800054c <iprintf>:
 800054c:	b40f      	push	{r0, r1, r2, r3}
 800054e:	b507      	push	{r0, r1, r2, lr}
 8000550:	4906      	ldr	r1, [pc, #24]	@ (800056c <iprintf+0x20>)
 8000552:	ab04      	add	r3, sp, #16
 8000554:	6808      	ldr	r0, [r1, #0]
 8000556:	f853 2b04 	ldr.w	r2, [r3], #4
 800055a:	6881      	ldr	r1, [r0, #8]
 800055c:	9301      	str	r3, [sp, #4]
 800055e:	f000 f9e5 	bl	800092c <_vfiprintf_r>
 8000562:	b003      	add	sp, #12
 8000564:	f85d eb04 	ldr.w	lr, [sp], #4
 8000568:	b004      	add	sp, #16
 800056a:	4770      	bx	lr
 800056c:	2000000c 	.word	0x2000000c

08000570 <__sread>:
 8000570:	b510      	push	{r4, lr}
 8000572:	460c      	mov	r4, r1
 8000574:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000578:	f000 f868 	bl	800064c <_read_r>
 800057c:	2800      	cmp	r0, #0
 800057e:	bfab      	itete	ge
 8000580:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8000582:	89a3      	ldrhlt	r3, [r4, #12]
 8000584:	181b      	addge	r3, r3, r0
 8000586:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 800058a:	bfac      	ite	ge
 800058c:	6563      	strge	r3, [r4, #84]	@ 0x54
 800058e:	81a3      	strhlt	r3, [r4, #12]
 8000590:	bd10      	pop	{r4, pc}

08000592 <__swrite>:
 8000592:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000596:	461f      	mov	r7, r3
 8000598:	898b      	ldrh	r3, [r1, #12]
 800059a:	4605      	mov	r5, r0
 800059c:	05db      	lsls	r3, r3, #23
 800059e:	460c      	mov	r4, r1
 80005a0:	4616      	mov	r6, r2
 80005a2:	d505      	bpl.n	80005b0 <__swrite+0x1e>
 80005a4:	2302      	movs	r3, #2
 80005a6:	2200      	movs	r2, #0
 80005a8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80005ac:	f000 f83c 	bl	8000628 <_lseek_r>
 80005b0:	89a3      	ldrh	r3, [r4, #12]
 80005b2:	4632      	mov	r2, r6
 80005b4:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80005b8:	81a3      	strh	r3, [r4, #12]
 80005ba:	4628      	mov	r0, r5
 80005bc:	463b      	mov	r3, r7
 80005be:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80005c2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80005c6:	f000 b853 	b.w	8000670 <_write_r>

080005ca <__sseek>:
 80005ca:	b510      	push	{r4, lr}
 80005cc:	460c      	mov	r4, r1
 80005ce:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80005d2:	f000 f829 	bl	8000628 <_lseek_r>
 80005d6:	1c43      	adds	r3, r0, #1
 80005d8:	89a3      	ldrh	r3, [r4, #12]
 80005da:	bf15      	itete	ne
 80005dc:	6560      	strne	r0, [r4, #84]	@ 0x54
 80005de:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 80005e2:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 80005e6:	81a3      	strheq	r3, [r4, #12]
 80005e8:	bf18      	it	ne
 80005ea:	81a3      	strhne	r3, [r4, #12]
 80005ec:	bd10      	pop	{r4, pc}

080005ee <__sclose>:
 80005ee:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80005f2:	f000 b809 	b.w	8000608 <_close_r>

080005f6 <memset>:
 80005f6:	4603      	mov	r3, r0
 80005f8:	4402      	add	r2, r0
 80005fa:	4293      	cmp	r3, r2
 80005fc:	d100      	bne.n	8000600 <memset+0xa>
 80005fe:	4770      	bx	lr
 8000600:	f803 1b01 	strb.w	r1, [r3], #1
 8000604:	e7f9      	b.n	80005fa <memset+0x4>
	...

08000608 <_close_r>:
 8000608:	b538      	push	{r3, r4, r5, lr}
 800060a:	2300      	movs	r3, #0
 800060c:	4d05      	ldr	r5, [pc, #20]	@ (8000624 <_close_r+0x1c>)
 800060e:	4604      	mov	r4, r0
 8000610:	4608      	mov	r0, r1
 8000612:	602b      	str	r3, [r5, #0]
 8000614:	f7ff fe27 	bl	8000266 <_close>
 8000618:	1c43      	adds	r3, r0, #1
 800061a:	d102      	bne.n	8000622 <_close_r+0x1a>
 800061c:	682b      	ldr	r3, [r5, #0]
 800061e:	b103      	cbz	r3, 8000622 <_close_r+0x1a>
 8000620:	6023      	str	r3, [r4, #0]
 8000622:	bd38      	pop	{r3, r4, r5, pc}
 8000624:	200001b8 	.word	0x200001b8

08000628 <_lseek_r>:
 8000628:	b538      	push	{r3, r4, r5, lr}
 800062a:	4604      	mov	r4, r0
 800062c:	4608      	mov	r0, r1
 800062e:	4611      	mov	r1, r2
 8000630:	2200      	movs	r2, #0
 8000632:	4d05      	ldr	r5, [pc, #20]	@ (8000648 <_lseek_r+0x20>)
 8000634:	602a      	str	r2, [r5, #0]
 8000636:	461a      	mov	r2, r3
 8000638:	f7ff fe39 	bl	80002ae <_lseek>
 800063c:	1c43      	adds	r3, r0, #1
 800063e:	d102      	bne.n	8000646 <_lseek_r+0x1e>
 8000640:	682b      	ldr	r3, [r5, #0]
 8000642:	b103      	cbz	r3, 8000646 <_lseek_r+0x1e>
 8000644:	6023      	str	r3, [r4, #0]
 8000646:	bd38      	pop	{r3, r4, r5, pc}
 8000648:	200001b8 	.word	0x200001b8

0800064c <_read_r>:
 800064c:	b538      	push	{r3, r4, r5, lr}
 800064e:	4604      	mov	r4, r0
 8000650:	4608      	mov	r0, r1
 8000652:	4611      	mov	r1, r2
 8000654:	2200      	movs	r2, #0
 8000656:	4d05      	ldr	r5, [pc, #20]	@ (800066c <_read_r+0x20>)
 8000658:	602a      	str	r2, [r5, #0]
 800065a:	461a      	mov	r2, r3
 800065c:	f7ff fdca 	bl	80001f4 <_read>
 8000660:	1c43      	adds	r3, r0, #1
 8000662:	d102      	bne.n	800066a <_read_r+0x1e>
 8000664:	682b      	ldr	r3, [r5, #0]
 8000666:	b103      	cbz	r3, 800066a <_read_r+0x1e>
 8000668:	6023      	str	r3, [r4, #0]
 800066a:	bd38      	pop	{r3, r4, r5, pc}
 800066c:	200001b8 	.word	0x200001b8

08000670 <_write_r>:
 8000670:	b538      	push	{r3, r4, r5, lr}
 8000672:	4604      	mov	r4, r0
 8000674:	4608      	mov	r0, r1
 8000676:	4611      	mov	r1, r2
 8000678:	2200      	movs	r2, #0
 800067a:	4d05      	ldr	r5, [pc, #20]	@ (8000690 <_write_r+0x20>)
 800067c:	602a      	str	r2, [r5, #0]
 800067e:	461a      	mov	r2, r3
 8000680:	f7ff fdd5 	bl	800022e <_write>
 8000684:	1c43      	adds	r3, r0, #1
 8000686:	d102      	bne.n	800068e <_write_r+0x1e>
 8000688:	682b      	ldr	r3, [r5, #0]
 800068a:	b103      	cbz	r3, 800068e <_write_r+0x1e>
 800068c:	6023      	str	r3, [r4, #0]
 800068e:	bd38      	pop	{r3, r4, r5, pc}
 8000690:	200001b8 	.word	0x200001b8

08000694 <__errno>:
 8000694:	4b01      	ldr	r3, [pc, #4]	@ (800069c <__errno+0x8>)
 8000696:	6818      	ldr	r0, [r3, #0]
 8000698:	4770      	bx	lr
 800069a:	bf00      	nop
 800069c:	2000000c 	.word	0x2000000c

080006a0 <__libc_init_array>:
 80006a0:	b570      	push	{r4, r5, r6, lr}
 80006a2:	2600      	movs	r6, #0
 80006a4:	4d0c      	ldr	r5, [pc, #48]	@ (80006d8 <__libc_init_array+0x38>)
 80006a6:	4c0d      	ldr	r4, [pc, #52]	@ (80006dc <__libc_init_array+0x3c>)
 80006a8:	1b64      	subs	r4, r4, r5
 80006aa:	10a4      	asrs	r4, r4, #2
 80006ac:	42a6      	cmp	r6, r4
 80006ae:	d109      	bne.n	80006c4 <__libc_init_array+0x24>
 80006b0:	f000 fdc2 	bl	8001238 <_init>
 80006b4:	2600      	movs	r6, #0
 80006b6:	4d0a      	ldr	r5, [pc, #40]	@ (80006e0 <__libc_init_array+0x40>)
 80006b8:	4c0a      	ldr	r4, [pc, #40]	@ (80006e4 <__libc_init_array+0x44>)
 80006ba:	1b64      	subs	r4, r4, r5
 80006bc:	10a4      	asrs	r4, r4, #2
 80006be:	42a6      	cmp	r6, r4
 80006c0:	d105      	bne.n	80006ce <__libc_init_array+0x2e>
 80006c2:	bd70      	pop	{r4, r5, r6, pc}
 80006c4:	f855 3b04 	ldr.w	r3, [r5], #4
 80006c8:	4798      	blx	r3
 80006ca:	3601      	adds	r6, #1
 80006cc:	e7ee      	b.n	80006ac <__libc_init_array+0xc>
 80006ce:	f855 3b04 	ldr.w	r3, [r5], #4
 80006d2:	4798      	blx	r3
 80006d4:	3601      	adds	r6, #1
 80006d6:	e7f2      	b.n	80006be <__libc_init_array+0x1e>
 80006d8:	0800129c 	.word	0x0800129c
 80006dc:	0800129c 	.word	0x0800129c
 80006e0:	0800129c 	.word	0x0800129c
 80006e4:	080012a0 	.word	0x080012a0

080006e8 <__retarget_lock_init_recursive>:
 80006e8:	4770      	bx	lr

080006ea <__retarget_lock_acquire_recursive>:
 80006ea:	4770      	bx	lr

080006ec <__retarget_lock_release_recursive>:
 80006ec:	4770      	bx	lr
	...

080006f0 <_free_r>:
 80006f0:	b538      	push	{r3, r4, r5, lr}
 80006f2:	4605      	mov	r5, r0
 80006f4:	2900      	cmp	r1, #0
 80006f6:	d040      	beq.n	800077a <_free_r+0x8a>
 80006f8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80006fc:	1f0c      	subs	r4, r1, #4
 80006fe:	2b00      	cmp	r3, #0
 8000700:	bfb8      	it	lt
 8000702:	18e4      	addlt	r4, r4, r3
 8000704:	f000 f8de 	bl	80008c4 <__malloc_lock>
 8000708:	4a1c      	ldr	r2, [pc, #112]	@ (800077c <_free_r+0x8c>)
 800070a:	6813      	ldr	r3, [r2, #0]
 800070c:	b933      	cbnz	r3, 800071c <_free_r+0x2c>
 800070e:	6063      	str	r3, [r4, #4]
 8000710:	6014      	str	r4, [r2, #0]
 8000712:	4628      	mov	r0, r5
 8000714:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000718:	f000 b8da 	b.w	80008d0 <__malloc_unlock>
 800071c:	42a3      	cmp	r3, r4
 800071e:	d908      	bls.n	8000732 <_free_r+0x42>
 8000720:	6820      	ldr	r0, [r4, #0]
 8000722:	1821      	adds	r1, r4, r0
 8000724:	428b      	cmp	r3, r1
 8000726:	bf01      	itttt	eq
 8000728:	6819      	ldreq	r1, [r3, #0]
 800072a:	685b      	ldreq	r3, [r3, #4]
 800072c:	1809      	addeq	r1, r1, r0
 800072e:	6021      	streq	r1, [r4, #0]
 8000730:	e7ed      	b.n	800070e <_free_r+0x1e>
 8000732:	461a      	mov	r2, r3
 8000734:	685b      	ldr	r3, [r3, #4]
 8000736:	b10b      	cbz	r3, 800073c <_free_r+0x4c>
 8000738:	42a3      	cmp	r3, r4
 800073a:	d9fa      	bls.n	8000732 <_free_r+0x42>
 800073c:	6811      	ldr	r1, [r2, #0]
 800073e:	1850      	adds	r0, r2, r1
 8000740:	42a0      	cmp	r0, r4
 8000742:	d10b      	bne.n	800075c <_free_r+0x6c>
 8000744:	6820      	ldr	r0, [r4, #0]
 8000746:	4401      	add	r1, r0
 8000748:	1850      	adds	r0, r2, r1
 800074a:	4283      	cmp	r3, r0
 800074c:	6011      	str	r1, [r2, #0]
 800074e:	d1e0      	bne.n	8000712 <_free_r+0x22>
 8000750:	6818      	ldr	r0, [r3, #0]
 8000752:	685b      	ldr	r3, [r3, #4]
 8000754:	4408      	add	r0, r1
 8000756:	6010      	str	r0, [r2, #0]
 8000758:	6053      	str	r3, [r2, #4]
 800075a:	e7da      	b.n	8000712 <_free_r+0x22>
 800075c:	d902      	bls.n	8000764 <_free_r+0x74>
 800075e:	230c      	movs	r3, #12
 8000760:	602b      	str	r3, [r5, #0]
 8000762:	e7d6      	b.n	8000712 <_free_r+0x22>
 8000764:	6820      	ldr	r0, [r4, #0]
 8000766:	1821      	adds	r1, r4, r0
 8000768:	428b      	cmp	r3, r1
 800076a:	bf01      	itttt	eq
 800076c:	6819      	ldreq	r1, [r3, #0]
 800076e:	685b      	ldreq	r3, [r3, #4]
 8000770:	1809      	addeq	r1, r1, r0
 8000772:	6021      	streq	r1, [r4, #0]
 8000774:	6063      	str	r3, [r4, #4]
 8000776:	6054      	str	r4, [r2, #4]
 8000778:	e7cb      	b.n	8000712 <_free_r+0x22>
 800077a:	bd38      	pop	{r3, r4, r5, pc}
 800077c:	200001c4 	.word	0x200001c4

08000780 <sbrk_aligned>:
 8000780:	b570      	push	{r4, r5, r6, lr}
 8000782:	4e0f      	ldr	r6, [pc, #60]	@ (80007c0 <sbrk_aligned+0x40>)
 8000784:	460c      	mov	r4, r1
 8000786:	6831      	ldr	r1, [r6, #0]
 8000788:	4605      	mov	r5, r0
 800078a:	b911      	cbnz	r1, 8000792 <sbrk_aligned+0x12>
 800078c:	f000 fcb2 	bl	80010f4 <_sbrk_r>
 8000790:	6030      	str	r0, [r6, #0]
 8000792:	4621      	mov	r1, r4
 8000794:	4628      	mov	r0, r5
 8000796:	f000 fcad 	bl	80010f4 <_sbrk_r>
 800079a:	1c43      	adds	r3, r0, #1
 800079c:	d103      	bne.n	80007a6 <sbrk_aligned+0x26>
 800079e:	f04f 34ff 	mov.w	r4, #4294967295
 80007a2:	4620      	mov	r0, r4
 80007a4:	bd70      	pop	{r4, r5, r6, pc}
 80007a6:	1cc4      	adds	r4, r0, #3
 80007a8:	f024 0403 	bic.w	r4, r4, #3
 80007ac:	42a0      	cmp	r0, r4
 80007ae:	d0f8      	beq.n	80007a2 <sbrk_aligned+0x22>
 80007b0:	1a21      	subs	r1, r4, r0
 80007b2:	4628      	mov	r0, r5
 80007b4:	f000 fc9e 	bl	80010f4 <_sbrk_r>
 80007b8:	3001      	adds	r0, #1
 80007ba:	d1f2      	bne.n	80007a2 <sbrk_aligned+0x22>
 80007bc:	e7ef      	b.n	800079e <sbrk_aligned+0x1e>
 80007be:	bf00      	nop
 80007c0:	200001c0 	.word	0x200001c0

080007c4 <_malloc_r>:
 80007c4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80007c8:	1ccd      	adds	r5, r1, #3
 80007ca:	f025 0503 	bic.w	r5, r5, #3
 80007ce:	3508      	adds	r5, #8
 80007d0:	2d0c      	cmp	r5, #12
 80007d2:	bf38      	it	cc
 80007d4:	250c      	movcc	r5, #12
 80007d6:	2d00      	cmp	r5, #0
 80007d8:	4606      	mov	r6, r0
 80007da:	db01      	blt.n	80007e0 <_malloc_r+0x1c>
 80007dc:	42a9      	cmp	r1, r5
 80007de:	d904      	bls.n	80007ea <_malloc_r+0x26>
 80007e0:	230c      	movs	r3, #12
 80007e2:	6033      	str	r3, [r6, #0]
 80007e4:	2000      	movs	r0, #0
 80007e6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80007ea:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 80008c0 <_malloc_r+0xfc>
 80007ee:	f000 f869 	bl	80008c4 <__malloc_lock>
 80007f2:	f8d8 3000 	ldr.w	r3, [r8]
 80007f6:	461c      	mov	r4, r3
 80007f8:	bb44      	cbnz	r4, 800084c <_malloc_r+0x88>
 80007fa:	4629      	mov	r1, r5
 80007fc:	4630      	mov	r0, r6
 80007fe:	f7ff ffbf 	bl	8000780 <sbrk_aligned>
 8000802:	1c43      	adds	r3, r0, #1
 8000804:	4604      	mov	r4, r0
 8000806:	d158      	bne.n	80008ba <_malloc_r+0xf6>
 8000808:	f8d8 4000 	ldr.w	r4, [r8]
 800080c:	4627      	mov	r7, r4
 800080e:	2f00      	cmp	r7, #0
 8000810:	d143      	bne.n	800089a <_malloc_r+0xd6>
 8000812:	2c00      	cmp	r4, #0
 8000814:	d04b      	beq.n	80008ae <_malloc_r+0xea>
 8000816:	6823      	ldr	r3, [r4, #0]
 8000818:	4639      	mov	r1, r7
 800081a:	4630      	mov	r0, r6
 800081c:	eb04 0903 	add.w	r9, r4, r3
 8000820:	f000 fc68 	bl	80010f4 <_sbrk_r>
 8000824:	4581      	cmp	r9, r0
 8000826:	d142      	bne.n	80008ae <_malloc_r+0xea>
 8000828:	6821      	ldr	r1, [r4, #0]
 800082a:	4630      	mov	r0, r6
 800082c:	1a6d      	subs	r5, r5, r1
 800082e:	4629      	mov	r1, r5
 8000830:	f7ff ffa6 	bl	8000780 <sbrk_aligned>
 8000834:	3001      	adds	r0, #1
 8000836:	d03a      	beq.n	80008ae <_malloc_r+0xea>
 8000838:	6823      	ldr	r3, [r4, #0]
 800083a:	442b      	add	r3, r5
 800083c:	6023      	str	r3, [r4, #0]
 800083e:	f8d8 3000 	ldr.w	r3, [r8]
 8000842:	685a      	ldr	r2, [r3, #4]
 8000844:	bb62      	cbnz	r2, 80008a0 <_malloc_r+0xdc>
 8000846:	f8c8 7000 	str.w	r7, [r8]
 800084a:	e00f      	b.n	800086c <_malloc_r+0xa8>
 800084c:	6822      	ldr	r2, [r4, #0]
 800084e:	1b52      	subs	r2, r2, r5
 8000850:	d420      	bmi.n	8000894 <_malloc_r+0xd0>
 8000852:	2a0b      	cmp	r2, #11
 8000854:	d917      	bls.n	8000886 <_malloc_r+0xc2>
 8000856:	1961      	adds	r1, r4, r5
 8000858:	42a3      	cmp	r3, r4
 800085a:	6025      	str	r5, [r4, #0]
 800085c:	bf18      	it	ne
 800085e:	6059      	strne	r1, [r3, #4]
 8000860:	6863      	ldr	r3, [r4, #4]
 8000862:	bf08      	it	eq
 8000864:	f8c8 1000 	streq.w	r1, [r8]
 8000868:	5162      	str	r2, [r4, r5]
 800086a:	604b      	str	r3, [r1, #4]
 800086c:	4630      	mov	r0, r6
 800086e:	f000 f82f 	bl	80008d0 <__malloc_unlock>
 8000872:	f104 000b 	add.w	r0, r4, #11
 8000876:	1d23      	adds	r3, r4, #4
 8000878:	f020 0007 	bic.w	r0, r0, #7
 800087c:	1ac2      	subs	r2, r0, r3
 800087e:	bf1c      	itt	ne
 8000880:	1a1b      	subne	r3, r3, r0
 8000882:	50a3      	strne	r3, [r4, r2]
 8000884:	e7af      	b.n	80007e6 <_malloc_r+0x22>
 8000886:	6862      	ldr	r2, [r4, #4]
 8000888:	42a3      	cmp	r3, r4
 800088a:	bf0c      	ite	eq
 800088c:	f8c8 2000 	streq.w	r2, [r8]
 8000890:	605a      	strne	r2, [r3, #4]
 8000892:	e7eb      	b.n	800086c <_malloc_r+0xa8>
 8000894:	4623      	mov	r3, r4
 8000896:	6864      	ldr	r4, [r4, #4]
 8000898:	e7ae      	b.n	80007f8 <_malloc_r+0x34>
 800089a:	463c      	mov	r4, r7
 800089c:	687f      	ldr	r7, [r7, #4]
 800089e:	e7b6      	b.n	800080e <_malloc_r+0x4a>
 80008a0:	461a      	mov	r2, r3
 80008a2:	685b      	ldr	r3, [r3, #4]
 80008a4:	42a3      	cmp	r3, r4
 80008a6:	d1fb      	bne.n	80008a0 <_malloc_r+0xdc>
 80008a8:	2300      	movs	r3, #0
 80008aa:	6053      	str	r3, [r2, #4]
 80008ac:	e7de      	b.n	800086c <_malloc_r+0xa8>
 80008ae:	230c      	movs	r3, #12
 80008b0:	4630      	mov	r0, r6
 80008b2:	6033      	str	r3, [r6, #0]
 80008b4:	f000 f80c 	bl	80008d0 <__malloc_unlock>
 80008b8:	e794      	b.n	80007e4 <_malloc_r+0x20>
 80008ba:	6005      	str	r5, [r0, #0]
 80008bc:	e7d6      	b.n	800086c <_malloc_r+0xa8>
 80008be:	bf00      	nop
 80008c0:	200001c4 	.word	0x200001c4

080008c4 <__malloc_lock>:
 80008c4:	4801      	ldr	r0, [pc, #4]	@ (80008cc <__malloc_lock+0x8>)
 80008c6:	f7ff bf10 	b.w	80006ea <__retarget_lock_acquire_recursive>
 80008ca:	bf00      	nop
 80008cc:	200001bc 	.word	0x200001bc

080008d0 <__malloc_unlock>:
 80008d0:	4801      	ldr	r0, [pc, #4]	@ (80008d8 <__malloc_unlock+0x8>)
 80008d2:	f7ff bf0b 	b.w	80006ec <__retarget_lock_release_recursive>
 80008d6:	bf00      	nop
 80008d8:	200001bc 	.word	0x200001bc

080008dc <__sfputc_r>:
 80008dc:	6893      	ldr	r3, [r2, #8]
 80008de:	b410      	push	{r4}
 80008e0:	3b01      	subs	r3, #1
 80008e2:	2b00      	cmp	r3, #0
 80008e4:	6093      	str	r3, [r2, #8]
 80008e6:	da07      	bge.n	80008f8 <__sfputc_r+0x1c>
 80008e8:	6994      	ldr	r4, [r2, #24]
 80008ea:	42a3      	cmp	r3, r4
 80008ec:	db01      	blt.n	80008f2 <__sfputc_r+0x16>
 80008ee:	290a      	cmp	r1, #10
 80008f0:	d102      	bne.n	80008f8 <__sfputc_r+0x1c>
 80008f2:	bc10      	pop	{r4}
 80008f4:	f000 bb6a 	b.w	8000fcc <__swbuf_r>
 80008f8:	6813      	ldr	r3, [r2, #0]
 80008fa:	1c58      	adds	r0, r3, #1
 80008fc:	6010      	str	r0, [r2, #0]
 80008fe:	7019      	strb	r1, [r3, #0]
 8000900:	4608      	mov	r0, r1
 8000902:	bc10      	pop	{r4}
 8000904:	4770      	bx	lr

08000906 <__sfputs_r>:
 8000906:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000908:	4606      	mov	r6, r0
 800090a:	460f      	mov	r7, r1
 800090c:	4614      	mov	r4, r2
 800090e:	18d5      	adds	r5, r2, r3
 8000910:	42ac      	cmp	r4, r5
 8000912:	d101      	bne.n	8000918 <__sfputs_r+0x12>
 8000914:	2000      	movs	r0, #0
 8000916:	e007      	b.n	8000928 <__sfputs_r+0x22>
 8000918:	463a      	mov	r2, r7
 800091a:	4630      	mov	r0, r6
 800091c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000920:	f7ff ffdc 	bl	80008dc <__sfputc_r>
 8000924:	1c43      	adds	r3, r0, #1
 8000926:	d1f3      	bne.n	8000910 <__sfputs_r+0xa>
 8000928:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0800092c <_vfiprintf_r>:
 800092c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000930:	460d      	mov	r5, r1
 8000932:	4614      	mov	r4, r2
 8000934:	4698      	mov	r8, r3
 8000936:	4606      	mov	r6, r0
 8000938:	b09d      	sub	sp, #116	@ 0x74
 800093a:	b118      	cbz	r0, 8000944 <_vfiprintf_r+0x18>
 800093c:	6a03      	ldr	r3, [r0, #32]
 800093e:	b90b      	cbnz	r3, 8000944 <_vfiprintf_r+0x18>
 8000940:	f7ff fdce 	bl	80004e0 <__sinit>
 8000944:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000946:	07d9      	lsls	r1, r3, #31
 8000948:	d405      	bmi.n	8000956 <_vfiprintf_r+0x2a>
 800094a:	89ab      	ldrh	r3, [r5, #12]
 800094c:	059a      	lsls	r2, r3, #22
 800094e:	d402      	bmi.n	8000956 <_vfiprintf_r+0x2a>
 8000950:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000952:	f7ff feca 	bl	80006ea <__retarget_lock_acquire_recursive>
 8000956:	89ab      	ldrh	r3, [r5, #12]
 8000958:	071b      	lsls	r3, r3, #28
 800095a:	d501      	bpl.n	8000960 <_vfiprintf_r+0x34>
 800095c:	692b      	ldr	r3, [r5, #16]
 800095e:	b99b      	cbnz	r3, 8000988 <_vfiprintf_r+0x5c>
 8000960:	4629      	mov	r1, r5
 8000962:	4630      	mov	r0, r6
 8000964:	f000 fb70 	bl	8001048 <__swsetup_r>
 8000968:	b170      	cbz	r0, 8000988 <_vfiprintf_r+0x5c>
 800096a:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800096c:	07dc      	lsls	r4, r3, #31
 800096e:	d504      	bpl.n	800097a <_vfiprintf_r+0x4e>
 8000970:	f04f 30ff 	mov.w	r0, #4294967295
 8000974:	b01d      	add	sp, #116	@ 0x74
 8000976:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800097a:	89ab      	ldrh	r3, [r5, #12]
 800097c:	0598      	lsls	r0, r3, #22
 800097e:	d4f7      	bmi.n	8000970 <_vfiprintf_r+0x44>
 8000980:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000982:	f7ff feb3 	bl	80006ec <__retarget_lock_release_recursive>
 8000986:	e7f3      	b.n	8000970 <_vfiprintf_r+0x44>
 8000988:	2300      	movs	r3, #0
 800098a:	9309      	str	r3, [sp, #36]	@ 0x24
 800098c:	2320      	movs	r3, #32
 800098e:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8000992:	2330      	movs	r3, #48	@ 0x30
 8000994:	f04f 0901 	mov.w	r9, #1
 8000998:	f8cd 800c 	str.w	r8, [sp, #12]
 800099c:	f8df 81a8 	ldr.w	r8, [pc, #424]	@ 8000b48 <_vfiprintf_r+0x21c>
 80009a0:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 80009a4:	4623      	mov	r3, r4
 80009a6:	469a      	mov	sl, r3
 80009a8:	f813 2b01 	ldrb.w	r2, [r3], #1
 80009ac:	b10a      	cbz	r2, 80009b2 <_vfiprintf_r+0x86>
 80009ae:	2a25      	cmp	r2, #37	@ 0x25
 80009b0:	d1f9      	bne.n	80009a6 <_vfiprintf_r+0x7a>
 80009b2:	ebba 0b04 	subs.w	fp, sl, r4
 80009b6:	d00b      	beq.n	80009d0 <_vfiprintf_r+0xa4>
 80009b8:	465b      	mov	r3, fp
 80009ba:	4622      	mov	r2, r4
 80009bc:	4629      	mov	r1, r5
 80009be:	4630      	mov	r0, r6
 80009c0:	f7ff ffa1 	bl	8000906 <__sfputs_r>
 80009c4:	3001      	adds	r0, #1
 80009c6:	f000 80a7 	beq.w	8000b18 <_vfiprintf_r+0x1ec>
 80009ca:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80009cc:	445a      	add	r2, fp
 80009ce:	9209      	str	r2, [sp, #36]	@ 0x24
 80009d0:	f89a 3000 	ldrb.w	r3, [sl]
 80009d4:	2b00      	cmp	r3, #0
 80009d6:	f000 809f 	beq.w	8000b18 <_vfiprintf_r+0x1ec>
 80009da:	2300      	movs	r3, #0
 80009dc:	f04f 32ff 	mov.w	r2, #4294967295
 80009e0:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80009e4:	f10a 0a01 	add.w	sl, sl, #1
 80009e8:	9304      	str	r3, [sp, #16]
 80009ea:	9307      	str	r3, [sp, #28]
 80009ec:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 80009f0:	931a      	str	r3, [sp, #104]	@ 0x68
 80009f2:	4654      	mov	r4, sl
 80009f4:	2205      	movs	r2, #5
 80009f6:	f814 1b01 	ldrb.w	r1, [r4], #1
 80009fa:	4853      	ldr	r0, [pc, #332]	@ (8000b48 <_vfiprintf_r+0x21c>)
 80009fc:	f000 fb8a 	bl	8001114 <memchr>
 8000a00:	9a04      	ldr	r2, [sp, #16]
 8000a02:	b9d8      	cbnz	r0, 8000a3c <_vfiprintf_r+0x110>
 8000a04:	06d1      	lsls	r1, r2, #27
 8000a06:	bf44      	itt	mi
 8000a08:	2320      	movmi	r3, #32
 8000a0a:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000a0e:	0713      	lsls	r3, r2, #28
 8000a10:	bf44      	itt	mi
 8000a12:	232b      	movmi	r3, #43	@ 0x2b
 8000a14:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000a18:	f89a 3000 	ldrb.w	r3, [sl]
 8000a1c:	2b2a      	cmp	r3, #42	@ 0x2a
 8000a1e:	d015      	beq.n	8000a4c <_vfiprintf_r+0x120>
 8000a20:	4654      	mov	r4, sl
 8000a22:	2000      	movs	r0, #0
 8000a24:	f04f 0c0a 	mov.w	ip, #10
 8000a28:	9a07      	ldr	r2, [sp, #28]
 8000a2a:	4621      	mov	r1, r4
 8000a2c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000a30:	3b30      	subs	r3, #48	@ 0x30
 8000a32:	2b09      	cmp	r3, #9
 8000a34:	d94b      	bls.n	8000ace <_vfiprintf_r+0x1a2>
 8000a36:	b1b0      	cbz	r0, 8000a66 <_vfiprintf_r+0x13a>
 8000a38:	9207      	str	r2, [sp, #28]
 8000a3a:	e014      	b.n	8000a66 <_vfiprintf_r+0x13a>
 8000a3c:	eba0 0308 	sub.w	r3, r0, r8
 8000a40:	fa09 f303 	lsl.w	r3, r9, r3
 8000a44:	4313      	orrs	r3, r2
 8000a46:	46a2      	mov	sl, r4
 8000a48:	9304      	str	r3, [sp, #16]
 8000a4a:	e7d2      	b.n	80009f2 <_vfiprintf_r+0xc6>
 8000a4c:	9b03      	ldr	r3, [sp, #12]
 8000a4e:	1d19      	adds	r1, r3, #4
 8000a50:	681b      	ldr	r3, [r3, #0]
 8000a52:	9103      	str	r1, [sp, #12]
 8000a54:	2b00      	cmp	r3, #0
 8000a56:	bfbb      	ittet	lt
 8000a58:	425b      	neglt	r3, r3
 8000a5a:	f042 0202 	orrlt.w	r2, r2, #2
 8000a5e:	9307      	strge	r3, [sp, #28]
 8000a60:	9307      	strlt	r3, [sp, #28]
 8000a62:	bfb8      	it	lt
 8000a64:	9204      	strlt	r2, [sp, #16]
 8000a66:	7823      	ldrb	r3, [r4, #0]
 8000a68:	2b2e      	cmp	r3, #46	@ 0x2e
 8000a6a:	d10a      	bne.n	8000a82 <_vfiprintf_r+0x156>
 8000a6c:	7863      	ldrb	r3, [r4, #1]
 8000a6e:	2b2a      	cmp	r3, #42	@ 0x2a
 8000a70:	d132      	bne.n	8000ad8 <_vfiprintf_r+0x1ac>
 8000a72:	9b03      	ldr	r3, [sp, #12]
 8000a74:	3402      	adds	r4, #2
 8000a76:	1d1a      	adds	r2, r3, #4
 8000a78:	681b      	ldr	r3, [r3, #0]
 8000a7a:	9203      	str	r2, [sp, #12]
 8000a7c:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8000a80:	9305      	str	r3, [sp, #20]
 8000a82:	f8df a0c8 	ldr.w	sl, [pc, #200]	@ 8000b4c <_vfiprintf_r+0x220>
 8000a86:	2203      	movs	r2, #3
 8000a88:	4650      	mov	r0, sl
 8000a8a:	7821      	ldrb	r1, [r4, #0]
 8000a8c:	f000 fb42 	bl	8001114 <memchr>
 8000a90:	b138      	cbz	r0, 8000aa2 <_vfiprintf_r+0x176>
 8000a92:	2240      	movs	r2, #64	@ 0x40
 8000a94:	9b04      	ldr	r3, [sp, #16]
 8000a96:	eba0 000a 	sub.w	r0, r0, sl
 8000a9a:	4082      	lsls	r2, r0
 8000a9c:	4313      	orrs	r3, r2
 8000a9e:	3401      	adds	r4, #1
 8000aa0:	9304      	str	r3, [sp, #16]
 8000aa2:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000aa6:	2206      	movs	r2, #6
 8000aa8:	4829      	ldr	r0, [pc, #164]	@ (8000b50 <_vfiprintf_r+0x224>)
 8000aaa:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8000aae:	f000 fb31 	bl	8001114 <memchr>
 8000ab2:	2800      	cmp	r0, #0
 8000ab4:	d03f      	beq.n	8000b36 <_vfiprintf_r+0x20a>
 8000ab6:	4b27      	ldr	r3, [pc, #156]	@ (8000b54 <_vfiprintf_r+0x228>)
 8000ab8:	bb1b      	cbnz	r3, 8000b02 <_vfiprintf_r+0x1d6>
 8000aba:	9b03      	ldr	r3, [sp, #12]
 8000abc:	3307      	adds	r3, #7
 8000abe:	f023 0307 	bic.w	r3, r3, #7
 8000ac2:	3308      	adds	r3, #8
 8000ac4:	9303      	str	r3, [sp, #12]
 8000ac6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8000ac8:	443b      	add	r3, r7
 8000aca:	9309      	str	r3, [sp, #36]	@ 0x24
 8000acc:	e76a      	b.n	80009a4 <_vfiprintf_r+0x78>
 8000ace:	460c      	mov	r4, r1
 8000ad0:	2001      	movs	r0, #1
 8000ad2:	fb0c 3202 	mla	r2, ip, r2, r3
 8000ad6:	e7a8      	b.n	8000a2a <_vfiprintf_r+0xfe>
 8000ad8:	2300      	movs	r3, #0
 8000ada:	f04f 0c0a 	mov.w	ip, #10
 8000ade:	4619      	mov	r1, r3
 8000ae0:	3401      	adds	r4, #1
 8000ae2:	9305      	str	r3, [sp, #20]
 8000ae4:	4620      	mov	r0, r4
 8000ae6:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000aea:	3a30      	subs	r2, #48	@ 0x30
 8000aec:	2a09      	cmp	r2, #9
 8000aee:	d903      	bls.n	8000af8 <_vfiprintf_r+0x1cc>
 8000af0:	2b00      	cmp	r3, #0
 8000af2:	d0c6      	beq.n	8000a82 <_vfiprintf_r+0x156>
 8000af4:	9105      	str	r1, [sp, #20]
 8000af6:	e7c4      	b.n	8000a82 <_vfiprintf_r+0x156>
 8000af8:	4604      	mov	r4, r0
 8000afa:	2301      	movs	r3, #1
 8000afc:	fb0c 2101 	mla	r1, ip, r1, r2
 8000b00:	e7f0      	b.n	8000ae4 <_vfiprintf_r+0x1b8>
 8000b02:	ab03      	add	r3, sp, #12
 8000b04:	9300      	str	r3, [sp, #0]
 8000b06:	462a      	mov	r2, r5
 8000b08:	4630      	mov	r0, r6
 8000b0a:	4b13      	ldr	r3, [pc, #76]	@ (8000b58 <_vfiprintf_r+0x22c>)
 8000b0c:	a904      	add	r1, sp, #16
 8000b0e:	f3af 8000 	nop.w
 8000b12:	4607      	mov	r7, r0
 8000b14:	1c78      	adds	r0, r7, #1
 8000b16:	d1d6      	bne.n	8000ac6 <_vfiprintf_r+0x19a>
 8000b18:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000b1a:	07d9      	lsls	r1, r3, #31
 8000b1c:	d405      	bmi.n	8000b2a <_vfiprintf_r+0x1fe>
 8000b1e:	89ab      	ldrh	r3, [r5, #12]
 8000b20:	059a      	lsls	r2, r3, #22
 8000b22:	d402      	bmi.n	8000b2a <_vfiprintf_r+0x1fe>
 8000b24:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000b26:	f7ff fde1 	bl	80006ec <__retarget_lock_release_recursive>
 8000b2a:	89ab      	ldrh	r3, [r5, #12]
 8000b2c:	065b      	lsls	r3, r3, #25
 8000b2e:	f53f af1f 	bmi.w	8000970 <_vfiprintf_r+0x44>
 8000b32:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8000b34:	e71e      	b.n	8000974 <_vfiprintf_r+0x48>
 8000b36:	ab03      	add	r3, sp, #12
 8000b38:	9300      	str	r3, [sp, #0]
 8000b3a:	462a      	mov	r2, r5
 8000b3c:	4630      	mov	r0, r6
 8000b3e:	4b06      	ldr	r3, [pc, #24]	@ (8000b58 <_vfiprintf_r+0x22c>)
 8000b40:	a904      	add	r1, sp, #16
 8000b42:	f000 f87d 	bl	8000c40 <_printf_i>
 8000b46:	e7e4      	b.n	8000b12 <_vfiprintf_r+0x1e6>
 8000b48:	08001266 	.word	0x08001266
 8000b4c:	0800126c 	.word	0x0800126c
 8000b50:	08001270 	.word	0x08001270
 8000b54:	00000000 	.word	0x00000000
 8000b58:	08000907 	.word	0x08000907

08000b5c <_printf_common>:
 8000b5c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000b60:	4616      	mov	r6, r2
 8000b62:	4698      	mov	r8, r3
 8000b64:	688a      	ldr	r2, [r1, #8]
 8000b66:	690b      	ldr	r3, [r1, #16]
 8000b68:	4607      	mov	r7, r0
 8000b6a:	4293      	cmp	r3, r2
 8000b6c:	bfb8      	it	lt
 8000b6e:	4613      	movlt	r3, r2
 8000b70:	6033      	str	r3, [r6, #0]
 8000b72:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8000b76:	460c      	mov	r4, r1
 8000b78:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8000b7c:	b10a      	cbz	r2, 8000b82 <_printf_common+0x26>
 8000b7e:	3301      	adds	r3, #1
 8000b80:	6033      	str	r3, [r6, #0]
 8000b82:	6823      	ldr	r3, [r4, #0]
 8000b84:	0699      	lsls	r1, r3, #26
 8000b86:	bf42      	ittt	mi
 8000b88:	6833      	ldrmi	r3, [r6, #0]
 8000b8a:	3302      	addmi	r3, #2
 8000b8c:	6033      	strmi	r3, [r6, #0]
 8000b8e:	6825      	ldr	r5, [r4, #0]
 8000b90:	f015 0506 	ands.w	r5, r5, #6
 8000b94:	d106      	bne.n	8000ba4 <_printf_common+0x48>
 8000b96:	f104 0a19 	add.w	sl, r4, #25
 8000b9a:	68e3      	ldr	r3, [r4, #12]
 8000b9c:	6832      	ldr	r2, [r6, #0]
 8000b9e:	1a9b      	subs	r3, r3, r2
 8000ba0:	42ab      	cmp	r3, r5
 8000ba2:	dc2b      	bgt.n	8000bfc <_printf_common+0xa0>
 8000ba4:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8000ba8:	6822      	ldr	r2, [r4, #0]
 8000baa:	3b00      	subs	r3, #0
 8000bac:	bf18      	it	ne
 8000bae:	2301      	movne	r3, #1
 8000bb0:	0692      	lsls	r2, r2, #26
 8000bb2:	d430      	bmi.n	8000c16 <_printf_common+0xba>
 8000bb4:	4641      	mov	r1, r8
 8000bb6:	4638      	mov	r0, r7
 8000bb8:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8000bbc:	47c8      	blx	r9
 8000bbe:	3001      	adds	r0, #1
 8000bc0:	d023      	beq.n	8000c0a <_printf_common+0xae>
 8000bc2:	6823      	ldr	r3, [r4, #0]
 8000bc4:	6922      	ldr	r2, [r4, #16]
 8000bc6:	f003 0306 	and.w	r3, r3, #6
 8000bca:	2b04      	cmp	r3, #4
 8000bcc:	bf14      	ite	ne
 8000bce:	2500      	movne	r5, #0
 8000bd0:	6833      	ldreq	r3, [r6, #0]
 8000bd2:	f04f 0600 	mov.w	r6, #0
 8000bd6:	bf08      	it	eq
 8000bd8:	68e5      	ldreq	r5, [r4, #12]
 8000bda:	f104 041a 	add.w	r4, r4, #26
 8000bde:	bf08      	it	eq
 8000be0:	1aed      	subeq	r5, r5, r3
 8000be2:	f854 3c12 	ldr.w	r3, [r4, #-18]
 8000be6:	bf08      	it	eq
 8000be8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000bec:	4293      	cmp	r3, r2
 8000bee:	bfc4      	itt	gt
 8000bf0:	1a9b      	subgt	r3, r3, r2
 8000bf2:	18ed      	addgt	r5, r5, r3
 8000bf4:	42b5      	cmp	r5, r6
 8000bf6:	d11a      	bne.n	8000c2e <_printf_common+0xd2>
 8000bf8:	2000      	movs	r0, #0
 8000bfa:	e008      	b.n	8000c0e <_printf_common+0xb2>
 8000bfc:	2301      	movs	r3, #1
 8000bfe:	4652      	mov	r2, sl
 8000c00:	4641      	mov	r1, r8
 8000c02:	4638      	mov	r0, r7
 8000c04:	47c8      	blx	r9
 8000c06:	3001      	adds	r0, #1
 8000c08:	d103      	bne.n	8000c12 <_printf_common+0xb6>
 8000c0a:	f04f 30ff 	mov.w	r0, #4294967295
 8000c0e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c12:	3501      	adds	r5, #1
 8000c14:	e7c1      	b.n	8000b9a <_printf_common+0x3e>
 8000c16:	2030      	movs	r0, #48	@ 0x30
 8000c18:	18e1      	adds	r1, r4, r3
 8000c1a:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8000c1e:	1c5a      	adds	r2, r3, #1
 8000c20:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8000c24:	4422      	add	r2, r4
 8000c26:	3302      	adds	r3, #2
 8000c28:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8000c2c:	e7c2      	b.n	8000bb4 <_printf_common+0x58>
 8000c2e:	2301      	movs	r3, #1
 8000c30:	4622      	mov	r2, r4
 8000c32:	4641      	mov	r1, r8
 8000c34:	4638      	mov	r0, r7
 8000c36:	47c8      	blx	r9
 8000c38:	3001      	adds	r0, #1
 8000c3a:	d0e6      	beq.n	8000c0a <_printf_common+0xae>
 8000c3c:	3601      	adds	r6, #1
 8000c3e:	e7d9      	b.n	8000bf4 <_printf_common+0x98>

08000c40 <_printf_i>:
 8000c40:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000c44:	7e0f      	ldrb	r7, [r1, #24]
 8000c46:	4691      	mov	r9, r2
 8000c48:	2f78      	cmp	r7, #120	@ 0x78
 8000c4a:	4680      	mov	r8, r0
 8000c4c:	460c      	mov	r4, r1
 8000c4e:	469a      	mov	sl, r3
 8000c50:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8000c52:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8000c56:	d807      	bhi.n	8000c68 <_printf_i+0x28>
 8000c58:	2f62      	cmp	r7, #98	@ 0x62
 8000c5a:	d80a      	bhi.n	8000c72 <_printf_i+0x32>
 8000c5c:	2f00      	cmp	r7, #0
 8000c5e:	f000 80d1 	beq.w	8000e04 <_printf_i+0x1c4>
 8000c62:	2f58      	cmp	r7, #88	@ 0x58
 8000c64:	f000 80b8 	beq.w	8000dd8 <_printf_i+0x198>
 8000c68:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000c6c:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8000c70:	e03a      	b.n	8000ce8 <_printf_i+0xa8>
 8000c72:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8000c76:	2b15      	cmp	r3, #21
 8000c78:	d8f6      	bhi.n	8000c68 <_printf_i+0x28>
 8000c7a:	a101      	add	r1, pc, #4	@ (adr r1, 8000c80 <_printf_i+0x40>)
 8000c7c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000c80:	08000cd9 	.word	0x08000cd9
 8000c84:	08000ced 	.word	0x08000ced
 8000c88:	08000c69 	.word	0x08000c69
 8000c8c:	08000c69 	.word	0x08000c69
 8000c90:	08000c69 	.word	0x08000c69
 8000c94:	08000c69 	.word	0x08000c69
 8000c98:	08000ced 	.word	0x08000ced
 8000c9c:	08000c69 	.word	0x08000c69
 8000ca0:	08000c69 	.word	0x08000c69
 8000ca4:	08000c69 	.word	0x08000c69
 8000ca8:	08000c69 	.word	0x08000c69
 8000cac:	08000deb 	.word	0x08000deb
 8000cb0:	08000d17 	.word	0x08000d17
 8000cb4:	08000da5 	.word	0x08000da5
 8000cb8:	08000c69 	.word	0x08000c69
 8000cbc:	08000c69 	.word	0x08000c69
 8000cc0:	08000e0d 	.word	0x08000e0d
 8000cc4:	08000c69 	.word	0x08000c69
 8000cc8:	08000d17 	.word	0x08000d17
 8000ccc:	08000c69 	.word	0x08000c69
 8000cd0:	08000c69 	.word	0x08000c69
 8000cd4:	08000dad 	.word	0x08000dad
 8000cd8:	6833      	ldr	r3, [r6, #0]
 8000cda:	1d1a      	adds	r2, r3, #4
 8000cdc:	681b      	ldr	r3, [r3, #0]
 8000cde:	6032      	str	r2, [r6, #0]
 8000ce0:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000ce4:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8000ce8:	2301      	movs	r3, #1
 8000cea:	e09c      	b.n	8000e26 <_printf_i+0x1e6>
 8000cec:	6833      	ldr	r3, [r6, #0]
 8000cee:	6820      	ldr	r0, [r4, #0]
 8000cf0:	1d19      	adds	r1, r3, #4
 8000cf2:	6031      	str	r1, [r6, #0]
 8000cf4:	0606      	lsls	r6, r0, #24
 8000cf6:	d501      	bpl.n	8000cfc <_printf_i+0xbc>
 8000cf8:	681d      	ldr	r5, [r3, #0]
 8000cfa:	e003      	b.n	8000d04 <_printf_i+0xc4>
 8000cfc:	0645      	lsls	r5, r0, #25
 8000cfe:	d5fb      	bpl.n	8000cf8 <_printf_i+0xb8>
 8000d00:	f9b3 5000 	ldrsh.w	r5, [r3]
 8000d04:	2d00      	cmp	r5, #0
 8000d06:	da03      	bge.n	8000d10 <_printf_i+0xd0>
 8000d08:	232d      	movs	r3, #45	@ 0x2d
 8000d0a:	426d      	negs	r5, r5
 8000d0c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8000d10:	230a      	movs	r3, #10
 8000d12:	4858      	ldr	r0, [pc, #352]	@ (8000e74 <_printf_i+0x234>)
 8000d14:	e011      	b.n	8000d3a <_printf_i+0xfa>
 8000d16:	6821      	ldr	r1, [r4, #0]
 8000d18:	6833      	ldr	r3, [r6, #0]
 8000d1a:	0608      	lsls	r0, r1, #24
 8000d1c:	f853 5b04 	ldr.w	r5, [r3], #4
 8000d20:	d402      	bmi.n	8000d28 <_printf_i+0xe8>
 8000d22:	0649      	lsls	r1, r1, #25
 8000d24:	bf48      	it	mi
 8000d26:	b2ad      	uxthmi	r5, r5
 8000d28:	2f6f      	cmp	r7, #111	@ 0x6f
 8000d2a:	6033      	str	r3, [r6, #0]
 8000d2c:	bf14      	ite	ne
 8000d2e:	230a      	movne	r3, #10
 8000d30:	2308      	moveq	r3, #8
 8000d32:	4850      	ldr	r0, [pc, #320]	@ (8000e74 <_printf_i+0x234>)
 8000d34:	2100      	movs	r1, #0
 8000d36:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8000d3a:	6866      	ldr	r6, [r4, #4]
 8000d3c:	2e00      	cmp	r6, #0
 8000d3e:	60a6      	str	r6, [r4, #8]
 8000d40:	db05      	blt.n	8000d4e <_printf_i+0x10e>
 8000d42:	6821      	ldr	r1, [r4, #0]
 8000d44:	432e      	orrs	r6, r5
 8000d46:	f021 0104 	bic.w	r1, r1, #4
 8000d4a:	6021      	str	r1, [r4, #0]
 8000d4c:	d04b      	beq.n	8000de6 <_printf_i+0x1a6>
 8000d4e:	4616      	mov	r6, r2
 8000d50:	fbb5 f1f3 	udiv	r1, r5, r3
 8000d54:	fb03 5711 	mls	r7, r3, r1, r5
 8000d58:	5dc7      	ldrb	r7, [r0, r7]
 8000d5a:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8000d5e:	462f      	mov	r7, r5
 8000d60:	42bb      	cmp	r3, r7
 8000d62:	460d      	mov	r5, r1
 8000d64:	d9f4      	bls.n	8000d50 <_printf_i+0x110>
 8000d66:	2b08      	cmp	r3, #8
 8000d68:	d10b      	bne.n	8000d82 <_printf_i+0x142>
 8000d6a:	6823      	ldr	r3, [r4, #0]
 8000d6c:	07df      	lsls	r7, r3, #31
 8000d6e:	d508      	bpl.n	8000d82 <_printf_i+0x142>
 8000d70:	6923      	ldr	r3, [r4, #16]
 8000d72:	6861      	ldr	r1, [r4, #4]
 8000d74:	4299      	cmp	r1, r3
 8000d76:	bfde      	ittt	le
 8000d78:	2330      	movle	r3, #48	@ 0x30
 8000d7a:	f806 3c01 	strble.w	r3, [r6, #-1]
 8000d7e:	f106 36ff 	addle.w	r6, r6, #4294967295
 8000d82:	1b92      	subs	r2, r2, r6
 8000d84:	6122      	str	r2, [r4, #16]
 8000d86:	464b      	mov	r3, r9
 8000d88:	4621      	mov	r1, r4
 8000d8a:	4640      	mov	r0, r8
 8000d8c:	f8cd a000 	str.w	sl, [sp]
 8000d90:	aa03      	add	r2, sp, #12
 8000d92:	f7ff fee3 	bl	8000b5c <_printf_common>
 8000d96:	3001      	adds	r0, #1
 8000d98:	d14a      	bne.n	8000e30 <_printf_i+0x1f0>
 8000d9a:	f04f 30ff 	mov.w	r0, #4294967295
 8000d9e:	b004      	add	sp, #16
 8000da0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000da4:	6823      	ldr	r3, [r4, #0]
 8000da6:	f043 0320 	orr.w	r3, r3, #32
 8000daa:	6023      	str	r3, [r4, #0]
 8000dac:	2778      	movs	r7, #120	@ 0x78
 8000dae:	4832      	ldr	r0, [pc, #200]	@ (8000e78 <_printf_i+0x238>)
 8000db0:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8000db4:	6823      	ldr	r3, [r4, #0]
 8000db6:	6831      	ldr	r1, [r6, #0]
 8000db8:	061f      	lsls	r7, r3, #24
 8000dba:	f851 5b04 	ldr.w	r5, [r1], #4
 8000dbe:	d402      	bmi.n	8000dc6 <_printf_i+0x186>
 8000dc0:	065f      	lsls	r7, r3, #25
 8000dc2:	bf48      	it	mi
 8000dc4:	b2ad      	uxthmi	r5, r5
 8000dc6:	6031      	str	r1, [r6, #0]
 8000dc8:	07d9      	lsls	r1, r3, #31
 8000dca:	bf44      	itt	mi
 8000dcc:	f043 0320 	orrmi.w	r3, r3, #32
 8000dd0:	6023      	strmi	r3, [r4, #0]
 8000dd2:	b11d      	cbz	r5, 8000ddc <_printf_i+0x19c>
 8000dd4:	2310      	movs	r3, #16
 8000dd6:	e7ad      	b.n	8000d34 <_printf_i+0xf4>
 8000dd8:	4826      	ldr	r0, [pc, #152]	@ (8000e74 <_printf_i+0x234>)
 8000dda:	e7e9      	b.n	8000db0 <_printf_i+0x170>
 8000ddc:	6823      	ldr	r3, [r4, #0]
 8000dde:	f023 0320 	bic.w	r3, r3, #32
 8000de2:	6023      	str	r3, [r4, #0]
 8000de4:	e7f6      	b.n	8000dd4 <_printf_i+0x194>
 8000de6:	4616      	mov	r6, r2
 8000de8:	e7bd      	b.n	8000d66 <_printf_i+0x126>
 8000dea:	6833      	ldr	r3, [r6, #0]
 8000dec:	6825      	ldr	r5, [r4, #0]
 8000dee:	1d18      	adds	r0, r3, #4
 8000df0:	6961      	ldr	r1, [r4, #20]
 8000df2:	6030      	str	r0, [r6, #0]
 8000df4:	062e      	lsls	r6, r5, #24
 8000df6:	681b      	ldr	r3, [r3, #0]
 8000df8:	d501      	bpl.n	8000dfe <_printf_i+0x1be>
 8000dfa:	6019      	str	r1, [r3, #0]
 8000dfc:	e002      	b.n	8000e04 <_printf_i+0x1c4>
 8000dfe:	0668      	lsls	r0, r5, #25
 8000e00:	d5fb      	bpl.n	8000dfa <_printf_i+0x1ba>
 8000e02:	8019      	strh	r1, [r3, #0]
 8000e04:	2300      	movs	r3, #0
 8000e06:	4616      	mov	r6, r2
 8000e08:	6123      	str	r3, [r4, #16]
 8000e0a:	e7bc      	b.n	8000d86 <_printf_i+0x146>
 8000e0c:	6833      	ldr	r3, [r6, #0]
 8000e0e:	2100      	movs	r1, #0
 8000e10:	1d1a      	adds	r2, r3, #4
 8000e12:	6032      	str	r2, [r6, #0]
 8000e14:	681e      	ldr	r6, [r3, #0]
 8000e16:	6862      	ldr	r2, [r4, #4]
 8000e18:	4630      	mov	r0, r6
 8000e1a:	f000 f97b 	bl	8001114 <memchr>
 8000e1e:	b108      	cbz	r0, 8000e24 <_printf_i+0x1e4>
 8000e20:	1b80      	subs	r0, r0, r6
 8000e22:	6060      	str	r0, [r4, #4]
 8000e24:	6863      	ldr	r3, [r4, #4]
 8000e26:	6123      	str	r3, [r4, #16]
 8000e28:	2300      	movs	r3, #0
 8000e2a:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8000e2e:	e7aa      	b.n	8000d86 <_printf_i+0x146>
 8000e30:	4632      	mov	r2, r6
 8000e32:	4649      	mov	r1, r9
 8000e34:	4640      	mov	r0, r8
 8000e36:	6923      	ldr	r3, [r4, #16]
 8000e38:	47d0      	blx	sl
 8000e3a:	3001      	adds	r0, #1
 8000e3c:	d0ad      	beq.n	8000d9a <_printf_i+0x15a>
 8000e3e:	6823      	ldr	r3, [r4, #0]
 8000e40:	079b      	lsls	r3, r3, #30
 8000e42:	d413      	bmi.n	8000e6c <_printf_i+0x22c>
 8000e44:	68e0      	ldr	r0, [r4, #12]
 8000e46:	9b03      	ldr	r3, [sp, #12]
 8000e48:	4298      	cmp	r0, r3
 8000e4a:	bfb8      	it	lt
 8000e4c:	4618      	movlt	r0, r3
 8000e4e:	e7a6      	b.n	8000d9e <_printf_i+0x15e>
 8000e50:	2301      	movs	r3, #1
 8000e52:	4632      	mov	r2, r6
 8000e54:	4649      	mov	r1, r9
 8000e56:	4640      	mov	r0, r8
 8000e58:	47d0      	blx	sl
 8000e5a:	3001      	adds	r0, #1
 8000e5c:	d09d      	beq.n	8000d9a <_printf_i+0x15a>
 8000e5e:	3501      	adds	r5, #1
 8000e60:	68e3      	ldr	r3, [r4, #12]
 8000e62:	9903      	ldr	r1, [sp, #12]
 8000e64:	1a5b      	subs	r3, r3, r1
 8000e66:	42ab      	cmp	r3, r5
 8000e68:	dcf2      	bgt.n	8000e50 <_printf_i+0x210>
 8000e6a:	e7eb      	b.n	8000e44 <_printf_i+0x204>
 8000e6c:	2500      	movs	r5, #0
 8000e6e:	f104 0619 	add.w	r6, r4, #25
 8000e72:	e7f5      	b.n	8000e60 <_printf_i+0x220>
 8000e74:	08001277 	.word	0x08001277
 8000e78:	08001288 	.word	0x08001288

08000e7c <__sflush_r>:
 8000e7c:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8000e80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000e82:	0716      	lsls	r6, r2, #28
 8000e84:	4605      	mov	r5, r0
 8000e86:	460c      	mov	r4, r1
 8000e88:	d454      	bmi.n	8000f34 <__sflush_r+0xb8>
 8000e8a:	684b      	ldr	r3, [r1, #4]
 8000e8c:	2b00      	cmp	r3, #0
 8000e8e:	dc02      	bgt.n	8000e96 <__sflush_r+0x1a>
 8000e90:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8000e92:	2b00      	cmp	r3, #0
 8000e94:	dd48      	ble.n	8000f28 <__sflush_r+0xac>
 8000e96:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8000e98:	2e00      	cmp	r6, #0
 8000e9a:	d045      	beq.n	8000f28 <__sflush_r+0xac>
 8000e9c:	2300      	movs	r3, #0
 8000e9e:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8000ea2:	682f      	ldr	r7, [r5, #0]
 8000ea4:	6a21      	ldr	r1, [r4, #32]
 8000ea6:	602b      	str	r3, [r5, #0]
 8000ea8:	d030      	beq.n	8000f0c <__sflush_r+0x90>
 8000eaa:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8000eac:	89a3      	ldrh	r3, [r4, #12]
 8000eae:	0759      	lsls	r1, r3, #29
 8000eb0:	d505      	bpl.n	8000ebe <__sflush_r+0x42>
 8000eb2:	6863      	ldr	r3, [r4, #4]
 8000eb4:	1ad2      	subs	r2, r2, r3
 8000eb6:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8000eb8:	b10b      	cbz	r3, 8000ebe <__sflush_r+0x42>
 8000eba:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8000ebc:	1ad2      	subs	r2, r2, r3
 8000ebe:	2300      	movs	r3, #0
 8000ec0:	4628      	mov	r0, r5
 8000ec2:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8000ec4:	6a21      	ldr	r1, [r4, #32]
 8000ec6:	47b0      	blx	r6
 8000ec8:	1c43      	adds	r3, r0, #1
 8000eca:	89a3      	ldrh	r3, [r4, #12]
 8000ecc:	d106      	bne.n	8000edc <__sflush_r+0x60>
 8000ece:	6829      	ldr	r1, [r5, #0]
 8000ed0:	291d      	cmp	r1, #29
 8000ed2:	d82b      	bhi.n	8000f2c <__sflush_r+0xb0>
 8000ed4:	4a28      	ldr	r2, [pc, #160]	@ (8000f78 <__sflush_r+0xfc>)
 8000ed6:	40ca      	lsrs	r2, r1
 8000ed8:	07d6      	lsls	r6, r2, #31
 8000eda:	d527      	bpl.n	8000f2c <__sflush_r+0xb0>
 8000edc:	2200      	movs	r2, #0
 8000ede:	6062      	str	r2, [r4, #4]
 8000ee0:	6922      	ldr	r2, [r4, #16]
 8000ee2:	04d9      	lsls	r1, r3, #19
 8000ee4:	6022      	str	r2, [r4, #0]
 8000ee6:	d504      	bpl.n	8000ef2 <__sflush_r+0x76>
 8000ee8:	1c42      	adds	r2, r0, #1
 8000eea:	d101      	bne.n	8000ef0 <__sflush_r+0x74>
 8000eec:	682b      	ldr	r3, [r5, #0]
 8000eee:	b903      	cbnz	r3, 8000ef2 <__sflush_r+0x76>
 8000ef0:	6560      	str	r0, [r4, #84]	@ 0x54
 8000ef2:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8000ef4:	602f      	str	r7, [r5, #0]
 8000ef6:	b1b9      	cbz	r1, 8000f28 <__sflush_r+0xac>
 8000ef8:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8000efc:	4299      	cmp	r1, r3
 8000efe:	d002      	beq.n	8000f06 <__sflush_r+0x8a>
 8000f00:	4628      	mov	r0, r5
 8000f02:	f7ff fbf5 	bl	80006f0 <_free_r>
 8000f06:	2300      	movs	r3, #0
 8000f08:	6363      	str	r3, [r4, #52]	@ 0x34
 8000f0a:	e00d      	b.n	8000f28 <__sflush_r+0xac>
 8000f0c:	2301      	movs	r3, #1
 8000f0e:	4628      	mov	r0, r5
 8000f10:	47b0      	blx	r6
 8000f12:	4602      	mov	r2, r0
 8000f14:	1c50      	adds	r0, r2, #1
 8000f16:	d1c9      	bne.n	8000eac <__sflush_r+0x30>
 8000f18:	682b      	ldr	r3, [r5, #0]
 8000f1a:	2b00      	cmp	r3, #0
 8000f1c:	d0c6      	beq.n	8000eac <__sflush_r+0x30>
 8000f1e:	2b1d      	cmp	r3, #29
 8000f20:	d001      	beq.n	8000f26 <__sflush_r+0xaa>
 8000f22:	2b16      	cmp	r3, #22
 8000f24:	d11d      	bne.n	8000f62 <__sflush_r+0xe6>
 8000f26:	602f      	str	r7, [r5, #0]
 8000f28:	2000      	movs	r0, #0
 8000f2a:	e021      	b.n	8000f70 <__sflush_r+0xf4>
 8000f2c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000f30:	b21b      	sxth	r3, r3
 8000f32:	e01a      	b.n	8000f6a <__sflush_r+0xee>
 8000f34:	690f      	ldr	r7, [r1, #16]
 8000f36:	2f00      	cmp	r7, #0
 8000f38:	d0f6      	beq.n	8000f28 <__sflush_r+0xac>
 8000f3a:	0793      	lsls	r3, r2, #30
 8000f3c:	bf18      	it	ne
 8000f3e:	2300      	movne	r3, #0
 8000f40:	680e      	ldr	r6, [r1, #0]
 8000f42:	bf08      	it	eq
 8000f44:	694b      	ldreq	r3, [r1, #20]
 8000f46:	1bf6      	subs	r6, r6, r7
 8000f48:	600f      	str	r7, [r1, #0]
 8000f4a:	608b      	str	r3, [r1, #8]
 8000f4c:	2e00      	cmp	r6, #0
 8000f4e:	ddeb      	ble.n	8000f28 <__sflush_r+0xac>
 8000f50:	4633      	mov	r3, r6
 8000f52:	463a      	mov	r2, r7
 8000f54:	4628      	mov	r0, r5
 8000f56:	6a21      	ldr	r1, [r4, #32]
 8000f58:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 8000f5c:	47e0      	blx	ip
 8000f5e:	2800      	cmp	r0, #0
 8000f60:	dc07      	bgt.n	8000f72 <__sflush_r+0xf6>
 8000f62:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000f66:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000f6a:	f04f 30ff 	mov.w	r0, #4294967295
 8000f6e:	81a3      	strh	r3, [r4, #12]
 8000f70:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000f72:	4407      	add	r7, r0
 8000f74:	1a36      	subs	r6, r6, r0
 8000f76:	e7e9      	b.n	8000f4c <__sflush_r+0xd0>
 8000f78:	20400001 	.word	0x20400001

08000f7c <_fflush_r>:
 8000f7c:	b538      	push	{r3, r4, r5, lr}
 8000f7e:	690b      	ldr	r3, [r1, #16]
 8000f80:	4605      	mov	r5, r0
 8000f82:	460c      	mov	r4, r1
 8000f84:	b913      	cbnz	r3, 8000f8c <_fflush_r+0x10>
 8000f86:	2500      	movs	r5, #0
 8000f88:	4628      	mov	r0, r5
 8000f8a:	bd38      	pop	{r3, r4, r5, pc}
 8000f8c:	b118      	cbz	r0, 8000f96 <_fflush_r+0x1a>
 8000f8e:	6a03      	ldr	r3, [r0, #32]
 8000f90:	b90b      	cbnz	r3, 8000f96 <_fflush_r+0x1a>
 8000f92:	f7ff faa5 	bl	80004e0 <__sinit>
 8000f96:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000f9a:	2b00      	cmp	r3, #0
 8000f9c:	d0f3      	beq.n	8000f86 <_fflush_r+0xa>
 8000f9e:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8000fa0:	07d0      	lsls	r0, r2, #31
 8000fa2:	d404      	bmi.n	8000fae <_fflush_r+0x32>
 8000fa4:	0599      	lsls	r1, r3, #22
 8000fa6:	d402      	bmi.n	8000fae <_fflush_r+0x32>
 8000fa8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8000faa:	f7ff fb9e 	bl	80006ea <__retarget_lock_acquire_recursive>
 8000fae:	4628      	mov	r0, r5
 8000fb0:	4621      	mov	r1, r4
 8000fb2:	f7ff ff63 	bl	8000e7c <__sflush_r>
 8000fb6:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8000fb8:	4605      	mov	r5, r0
 8000fba:	07da      	lsls	r2, r3, #31
 8000fbc:	d4e4      	bmi.n	8000f88 <_fflush_r+0xc>
 8000fbe:	89a3      	ldrh	r3, [r4, #12]
 8000fc0:	059b      	lsls	r3, r3, #22
 8000fc2:	d4e1      	bmi.n	8000f88 <_fflush_r+0xc>
 8000fc4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8000fc6:	f7ff fb91 	bl	80006ec <__retarget_lock_release_recursive>
 8000fca:	e7dd      	b.n	8000f88 <_fflush_r+0xc>

08000fcc <__swbuf_r>:
 8000fcc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000fce:	460e      	mov	r6, r1
 8000fd0:	4614      	mov	r4, r2
 8000fd2:	4605      	mov	r5, r0
 8000fd4:	b118      	cbz	r0, 8000fde <__swbuf_r+0x12>
 8000fd6:	6a03      	ldr	r3, [r0, #32]
 8000fd8:	b90b      	cbnz	r3, 8000fde <__swbuf_r+0x12>
 8000fda:	f7ff fa81 	bl	80004e0 <__sinit>
 8000fde:	69a3      	ldr	r3, [r4, #24]
 8000fe0:	60a3      	str	r3, [r4, #8]
 8000fe2:	89a3      	ldrh	r3, [r4, #12]
 8000fe4:	071a      	lsls	r2, r3, #28
 8000fe6:	d501      	bpl.n	8000fec <__swbuf_r+0x20>
 8000fe8:	6923      	ldr	r3, [r4, #16]
 8000fea:	b943      	cbnz	r3, 8000ffe <__swbuf_r+0x32>
 8000fec:	4621      	mov	r1, r4
 8000fee:	4628      	mov	r0, r5
 8000ff0:	f000 f82a 	bl	8001048 <__swsetup_r>
 8000ff4:	b118      	cbz	r0, 8000ffe <__swbuf_r+0x32>
 8000ff6:	f04f 37ff 	mov.w	r7, #4294967295
 8000ffa:	4638      	mov	r0, r7
 8000ffc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000ffe:	6823      	ldr	r3, [r4, #0]
 8001000:	6922      	ldr	r2, [r4, #16]
 8001002:	b2f6      	uxtb	r6, r6
 8001004:	1a98      	subs	r0, r3, r2
 8001006:	6963      	ldr	r3, [r4, #20]
 8001008:	4637      	mov	r7, r6
 800100a:	4283      	cmp	r3, r0
 800100c:	dc05      	bgt.n	800101a <__swbuf_r+0x4e>
 800100e:	4621      	mov	r1, r4
 8001010:	4628      	mov	r0, r5
 8001012:	f7ff ffb3 	bl	8000f7c <_fflush_r>
 8001016:	2800      	cmp	r0, #0
 8001018:	d1ed      	bne.n	8000ff6 <__swbuf_r+0x2a>
 800101a:	68a3      	ldr	r3, [r4, #8]
 800101c:	3b01      	subs	r3, #1
 800101e:	60a3      	str	r3, [r4, #8]
 8001020:	6823      	ldr	r3, [r4, #0]
 8001022:	1c5a      	adds	r2, r3, #1
 8001024:	6022      	str	r2, [r4, #0]
 8001026:	701e      	strb	r6, [r3, #0]
 8001028:	6962      	ldr	r2, [r4, #20]
 800102a:	1c43      	adds	r3, r0, #1
 800102c:	429a      	cmp	r2, r3
 800102e:	d004      	beq.n	800103a <__swbuf_r+0x6e>
 8001030:	89a3      	ldrh	r3, [r4, #12]
 8001032:	07db      	lsls	r3, r3, #31
 8001034:	d5e1      	bpl.n	8000ffa <__swbuf_r+0x2e>
 8001036:	2e0a      	cmp	r6, #10
 8001038:	d1df      	bne.n	8000ffa <__swbuf_r+0x2e>
 800103a:	4621      	mov	r1, r4
 800103c:	4628      	mov	r0, r5
 800103e:	f7ff ff9d 	bl	8000f7c <_fflush_r>
 8001042:	2800      	cmp	r0, #0
 8001044:	d0d9      	beq.n	8000ffa <__swbuf_r+0x2e>
 8001046:	e7d6      	b.n	8000ff6 <__swbuf_r+0x2a>

08001048 <__swsetup_r>:
 8001048:	b538      	push	{r3, r4, r5, lr}
 800104a:	4b29      	ldr	r3, [pc, #164]	@ (80010f0 <__swsetup_r+0xa8>)
 800104c:	4605      	mov	r5, r0
 800104e:	6818      	ldr	r0, [r3, #0]
 8001050:	460c      	mov	r4, r1
 8001052:	b118      	cbz	r0, 800105c <__swsetup_r+0x14>
 8001054:	6a03      	ldr	r3, [r0, #32]
 8001056:	b90b      	cbnz	r3, 800105c <__swsetup_r+0x14>
 8001058:	f7ff fa42 	bl	80004e0 <__sinit>
 800105c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001060:	0719      	lsls	r1, r3, #28
 8001062:	d422      	bmi.n	80010aa <__swsetup_r+0x62>
 8001064:	06da      	lsls	r2, r3, #27
 8001066:	d407      	bmi.n	8001078 <__swsetup_r+0x30>
 8001068:	2209      	movs	r2, #9
 800106a:	602a      	str	r2, [r5, #0]
 800106c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001070:	f04f 30ff 	mov.w	r0, #4294967295
 8001074:	81a3      	strh	r3, [r4, #12]
 8001076:	e033      	b.n	80010e0 <__swsetup_r+0x98>
 8001078:	0758      	lsls	r0, r3, #29
 800107a:	d512      	bpl.n	80010a2 <__swsetup_r+0x5a>
 800107c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800107e:	b141      	cbz	r1, 8001092 <__swsetup_r+0x4a>
 8001080:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8001084:	4299      	cmp	r1, r3
 8001086:	d002      	beq.n	800108e <__swsetup_r+0x46>
 8001088:	4628      	mov	r0, r5
 800108a:	f7ff fb31 	bl	80006f0 <_free_r>
 800108e:	2300      	movs	r3, #0
 8001090:	6363      	str	r3, [r4, #52]	@ 0x34
 8001092:	89a3      	ldrh	r3, [r4, #12]
 8001094:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8001098:	81a3      	strh	r3, [r4, #12]
 800109a:	2300      	movs	r3, #0
 800109c:	6063      	str	r3, [r4, #4]
 800109e:	6923      	ldr	r3, [r4, #16]
 80010a0:	6023      	str	r3, [r4, #0]
 80010a2:	89a3      	ldrh	r3, [r4, #12]
 80010a4:	f043 0308 	orr.w	r3, r3, #8
 80010a8:	81a3      	strh	r3, [r4, #12]
 80010aa:	6923      	ldr	r3, [r4, #16]
 80010ac:	b94b      	cbnz	r3, 80010c2 <__swsetup_r+0x7a>
 80010ae:	89a3      	ldrh	r3, [r4, #12]
 80010b0:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 80010b4:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80010b8:	d003      	beq.n	80010c2 <__swsetup_r+0x7a>
 80010ba:	4621      	mov	r1, r4
 80010bc:	4628      	mov	r0, r5
 80010be:	f000 f85c 	bl	800117a <__smakebuf_r>
 80010c2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80010c6:	f013 0201 	ands.w	r2, r3, #1
 80010ca:	d00a      	beq.n	80010e2 <__swsetup_r+0x9a>
 80010cc:	2200      	movs	r2, #0
 80010ce:	60a2      	str	r2, [r4, #8]
 80010d0:	6962      	ldr	r2, [r4, #20]
 80010d2:	4252      	negs	r2, r2
 80010d4:	61a2      	str	r2, [r4, #24]
 80010d6:	6922      	ldr	r2, [r4, #16]
 80010d8:	b942      	cbnz	r2, 80010ec <__swsetup_r+0xa4>
 80010da:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 80010de:	d1c5      	bne.n	800106c <__swsetup_r+0x24>
 80010e0:	bd38      	pop	{r3, r4, r5, pc}
 80010e2:	0799      	lsls	r1, r3, #30
 80010e4:	bf58      	it	pl
 80010e6:	6962      	ldrpl	r2, [r4, #20]
 80010e8:	60a2      	str	r2, [r4, #8]
 80010ea:	e7f4      	b.n	80010d6 <__swsetup_r+0x8e>
 80010ec:	2000      	movs	r0, #0
 80010ee:	e7f7      	b.n	80010e0 <__swsetup_r+0x98>
 80010f0:	2000000c 	.word	0x2000000c

080010f4 <_sbrk_r>:
 80010f4:	b538      	push	{r3, r4, r5, lr}
 80010f6:	2300      	movs	r3, #0
 80010f8:	4d05      	ldr	r5, [pc, #20]	@ (8001110 <_sbrk_r+0x1c>)
 80010fa:	4604      	mov	r4, r0
 80010fc:	4608      	mov	r0, r1
 80010fe:	602b      	str	r3, [r5, #0]
 8001100:	f7ff f8e2 	bl	80002c8 <_sbrk>
 8001104:	1c43      	adds	r3, r0, #1
 8001106:	d102      	bne.n	800110e <_sbrk_r+0x1a>
 8001108:	682b      	ldr	r3, [r5, #0]
 800110a:	b103      	cbz	r3, 800110e <_sbrk_r+0x1a>
 800110c:	6023      	str	r3, [r4, #0]
 800110e:	bd38      	pop	{r3, r4, r5, pc}
 8001110:	200001b8 	.word	0x200001b8

08001114 <memchr>:
 8001114:	4603      	mov	r3, r0
 8001116:	b510      	push	{r4, lr}
 8001118:	b2c9      	uxtb	r1, r1
 800111a:	4402      	add	r2, r0
 800111c:	4293      	cmp	r3, r2
 800111e:	4618      	mov	r0, r3
 8001120:	d101      	bne.n	8001126 <memchr+0x12>
 8001122:	2000      	movs	r0, #0
 8001124:	e003      	b.n	800112e <memchr+0x1a>
 8001126:	7804      	ldrb	r4, [r0, #0]
 8001128:	3301      	adds	r3, #1
 800112a:	428c      	cmp	r4, r1
 800112c:	d1f6      	bne.n	800111c <memchr+0x8>
 800112e:	bd10      	pop	{r4, pc}

08001130 <__swhatbuf_r>:
 8001130:	b570      	push	{r4, r5, r6, lr}
 8001132:	460c      	mov	r4, r1
 8001134:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001138:	4615      	mov	r5, r2
 800113a:	2900      	cmp	r1, #0
 800113c:	461e      	mov	r6, r3
 800113e:	b096      	sub	sp, #88	@ 0x58
 8001140:	da0c      	bge.n	800115c <__swhatbuf_r+0x2c>
 8001142:	89a3      	ldrh	r3, [r4, #12]
 8001144:	2100      	movs	r1, #0
 8001146:	f013 0f80 	tst.w	r3, #128	@ 0x80
 800114a:	bf14      	ite	ne
 800114c:	2340      	movne	r3, #64	@ 0x40
 800114e:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8001152:	2000      	movs	r0, #0
 8001154:	6031      	str	r1, [r6, #0]
 8001156:	602b      	str	r3, [r5, #0]
 8001158:	b016      	add	sp, #88	@ 0x58
 800115a:	bd70      	pop	{r4, r5, r6, pc}
 800115c:	466a      	mov	r2, sp
 800115e:	f000 f849 	bl	80011f4 <_fstat_r>
 8001162:	2800      	cmp	r0, #0
 8001164:	dbed      	blt.n	8001142 <__swhatbuf_r+0x12>
 8001166:	9901      	ldr	r1, [sp, #4]
 8001168:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 800116c:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8001170:	4259      	negs	r1, r3
 8001172:	4159      	adcs	r1, r3
 8001174:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8001178:	e7eb      	b.n	8001152 <__swhatbuf_r+0x22>

0800117a <__smakebuf_r>:
 800117a:	898b      	ldrh	r3, [r1, #12]
 800117c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800117e:	079d      	lsls	r5, r3, #30
 8001180:	4606      	mov	r6, r0
 8001182:	460c      	mov	r4, r1
 8001184:	d507      	bpl.n	8001196 <__smakebuf_r+0x1c>
 8001186:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 800118a:	6023      	str	r3, [r4, #0]
 800118c:	6123      	str	r3, [r4, #16]
 800118e:	2301      	movs	r3, #1
 8001190:	6163      	str	r3, [r4, #20]
 8001192:	b003      	add	sp, #12
 8001194:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001196:	466a      	mov	r2, sp
 8001198:	ab01      	add	r3, sp, #4
 800119a:	f7ff ffc9 	bl	8001130 <__swhatbuf_r>
 800119e:	9f00      	ldr	r7, [sp, #0]
 80011a0:	4605      	mov	r5, r0
 80011a2:	4639      	mov	r1, r7
 80011a4:	4630      	mov	r0, r6
 80011a6:	f7ff fb0d 	bl	80007c4 <_malloc_r>
 80011aa:	b948      	cbnz	r0, 80011c0 <__smakebuf_r+0x46>
 80011ac:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80011b0:	059a      	lsls	r2, r3, #22
 80011b2:	d4ee      	bmi.n	8001192 <__smakebuf_r+0x18>
 80011b4:	f023 0303 	bic.w	r3, r3, #3
 80011b8:	f043 0302 	orr.w	r3, r3, #2
 80011bc:	81a3      	strh	r3, [r4, #12]
 80011be:	e7e2      	b.n	8001186 <__smakebuf_r+0xc>
 80011c0:	89a3      	ldrh	r3, [r4, #12]
 80011c2:	e9c4 0704 	strd	r0, r7, [r4, #16]
 80011c6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80011ca:	81a3      	strh	r3, [r4, #12]
 80011cc:	9b01      	ldr	r3, [sp, #4]
 80011ce:	6020      	str	r0, [r4, #0]
 80011d0:	b15b      	cbz	r3, 80011ea <__smakebuf_r+0x70>
 80011d2:	4630      	mov	r0, r6
 80011d4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80011d8:	f000 f81e 	bl	8001218 <_isatty_r>
 80011dc:	b128      	cbz	r0, 80011ea <__smakebuf_r+0x70>
 80011de:	89a3      	ldrh	r3, [r4, #12]
 80011e0:	f023 0303 	bic.w	r3, r3, #3
 80011e4:	f043 0301 	orr.w	r3, r3, #1
 80011e8:	81a3      	strh	r3, [r4, #12]
 80011ea:	89a3      	ldrh	r3, [r4, #12]
 80011ec:	431d      	orrs	r5, r3
 80011ee:	81a5      	strh	r5, [r4, #12]
 80011f0:	e7cf      	b.n	8001192 <__smakebuf_r+0x18>
	...

080011f4 <_fstat_r>:
 80011f4:	b538      	push	{r3, r4, r5, lr}
 80011f6:	2300      	movs	r3, #0
 80011f8:	4d06      	ldr	r5, [pc, #24]	@ (8001214 <_fstat_r+0x20>)
 80011fa:	4604      	mov	r4, r0
 80011fc:	4608      	mov	r0, r1
 80011fe:	4611      	mov	r1, r2
 8001200:	602b      	str	r3, [r5, #0]
 8001202:	f7ff f83b 	bl	800027c <_fstat>
 8001206:	1c43      	adds	r3, r0, #1
 8001208:	d102      	bne.n	8001210 <_fstat_r+0x1c>
 800120a:	682b      	ldr	r3, [r5, #0]
 800120c:	b103      	cbz	r3, 8001210 <_fstat_r+0x1c>
 800120e:	6023      	str	r3, [r4, #0]
 8001210:	bd38      	pop	{r3, r4, r5, pc}
 8001212:	bf00      	nop
 8001214:	200001b8 	.word	0x200001b8

08001218 <_isatty_r>:
 8001218:	b538      	push	{r3, r4, r5, lr}
 800121a:	2300      	movs	r3, #0
 800121c:	4d05      	ldr	r5, [pc, #20]	@ (8001234 <_isatty_r+0x1c>)
 800121e:	4604      	mov	r4, r0
 8001220:	4608      	mov	r0, r1
 8001222:	602b      	str	r3, [r5, #0]
 8001224:	f7ff f839 	bl	800029a <_isatty>
 8001228:	1c43      	adds	r3, r0, #1
 800122a:	d102      	bne.n	8001232 <_isatty_r+0x1a>
 800122c:	682b      	ldr	r3, [r5, #0]
 800122e:	b103      	cbz	r3, 8001232 <_isatty_r+0x1a>
 8001230:	6023      	str	r3, [r4, #0]
 8001232:	bd38      	pop	{r3, r4, r5, pc}
 8001234:	200001b8 	.word	0x200001b8

08001238 <_init>:
 8001238:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800123a:	bf00      	nop
 800123c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800123e:	bc08      	pop	{r3}
 8001240:	469e      	mov	lr, r3
 8001242:	4770      	bx	lr

08001244 <_fini>:
 8001244:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001246:	bf00      	nop
 8001248:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800124a:	bc08      	pop	{r3}
 800124c:	469e      	mov	lr, r3
 800124e:	4770      	bx	lr
